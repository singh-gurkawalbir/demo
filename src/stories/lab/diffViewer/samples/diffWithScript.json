{
    "numConflicts": 0,
    "merged": {
        "script": {
            "620ca2d1b738605d4ba0b6a8.new": {
                "name": "My new script",
                "$blob": "/*\n* handleRequest function stub:\n*\n* The name of the function can be changed to anything you like.\n*\n* The function will be passed one 'options' argument that has the following fields:\n*   'method' - http request method (uppercase string).\n*   'headers' - http request headers (object).  \n*   'queryString' - http request query string (object).\n*   'body' - parsed http request body (object, or undefined if unable to parse).\n*   'rawBody' - raw http request body (string).\n*\n* The function needs to return a response object that has the following fields:\n*   'statusCode' - http response status code (number).\n*   'headers' - http response headers overrides (object, optional).\n*   'body' - http response body (string or object).\n* Throwing an exception will signal an error.\n*/\nfunction handleRequest (options) {\n  console.log('options', options)\n  return {\n    statusCode: 200,\n    headers: { },\n    body: options.body\n  }\n}"
            },
            "61badae2048bf1159fe9dd3c.deleted": {
                "name": "My API",
                "$blob": "/*\n* handleRequest function stub:\n*\n* The name of the function can be changed to anything you like.\n*\n* The function will be passed one 'options' argument that has the following fields:\n*   'method' - http request method (uppercase string).\n*   'headers' - http request headers (object).  \n*   'queryString' - http request query string (object).\n*   'body' - parsed http request body (object, or undefined if unable to parse).\n*   'rawBody' - raw http request body (string).\n*\n* The function needs to return a response object that has the following fields:\n*   'statusCode' - http response status code (number).\n*   'headers' - http response headers overrides (object, optional).\n*   'body' - http response body (string or object).\n* Throwing an exception will signal an error.\n*/\nfunction handleRequest (options) {\n  return {\n    statusCode: 200,\n    headers: { },\n    body: options.body\n  }\n}"
            }
        },
        "connection": {
            "61d439eb09cf7870de83d208": {
                "http": {
                    "auth": {
                        "failValues": [],
                        "oauth": {
                            "scope": []
                        },
                        "type": "custom"
                    },
                    "baseURI": "http://test.com",
                    "encrypted": "******",
                    "formType": "http",
                    "mediaType": "json",
                    "ping": {
                        "failValues": [],
                        "successValues": []
                    },
                    "rateLimit": {
                        "failValues": []
                    },
                    "unencrypted": {
                        "field": "value"
                    }
                },
                "name": "htt[",
                "type": "http"
            }
        },
        "export": {
            "620ca225b738605d4ba0b692": {
                "_connectionId": "61d439eb09cf7870de83d208",
                "adaptorType": "HTTPExport",
                "asynchronous": true,
                "file": {
                    "groupByFields": []
                },
                "hooks": {
                    "preSavePage": {
                        "_scriptId": "620ca2d1b738605d4ba0b6a8.new",
                        "function": "preSavePage"
                    }
                },
                "http": {
                    "formType": "http",
                    "method": "GET",
                    "paging": {
                        "lastPageValues": []
                    },
                    "relativeURI": "/test",
                    "response": {
                        "failValues": [],
                        "successValues": []
                    }
                },
                "name": "Http export",
                "oneToMany": false,
                "parsers": []
            }
        },
        "flow": {
            "620ca211b738605d4ba0b690": {
                "autoResolveMatchingTraceKeys": true,
                "disabled": true,
                "free": false,
                "name": "Flow with Script",
                "pageGenerators": [
                    {
                        "_exportId": "620ca225b738605d4ba0b692",
                        "skipRetries": false
                    }
                ],
                "pageProcessors": [
                    {
                        "_importId": "6203b04a887b312cb0811c8d",
                        "responseMapping": {
                            "fields": [],
                            "lists": []
                        },
                        "type": "import"
                    }
                ],
                "skipRetries": false
            }
        },
        "import": {
            "6203b04a887b312cb0811c8d": {
                "_connectionId": "61d439eb09cf7870de83d208",
                "adaptorType": "HTTPImport",
                "http": {
                    "batchSize": 1,
                    "body": [],
                    "formType": "http",
                    "method": [
                        "POST"
                    ],
                    "relativeURI": [
                        "/test"
                    ],
                    "sendPostMappedData": true
                },
                "ignoreExisting": false,
                "ignoreMissing": false,
                "lookups": [],
                "name": "Http imp",
                "oneToMany": false,
                "parsers": []
            }
        },
        "integration": {
            "620ca206b738605d4ba0b68e": {
                "flowGroupings": [],
                "install": [],
                "installSteps": [],
                "mode": "settings",
                "name": "Clone - Integration with Script",
                "uninstallSteps": []
            }
        }
    },
    "current": {
        "connection": {
            "61d439eb09cf7870de83d208": {
                "http": {
                    "auth": {
                        "failValues": [],
                        "oauth": {
                            "scope": []
                        },
                        "type": "custom"
                    },
                    "baseURI": "http://test.com",
                    "encrypted": "******",
                    "formType": "http",
                    "mediaType": "json",
                    "ping": {
                        "failValues": [],
                        "successValues": []
                    },
                    "rateLimit": {
                        "failValues": []
                    },
                    "unencrypted": {
                        "field": "value"
                    }
                },
                "name": "htt[",
                "sandbox": false,
                "type": "http"
            }
        },
        "export": {
            "620ca225b738605d4ba0b692": {
                "_connectionId": "61d439eb09cf7870de83d208",
                "adaptorType": "HTTPExport",
                "asynchronous": true,
                "file": {
                    "groupByFields": []
                },
                "hooks": {
                    "preSavePage": {
                        "_scriptId": "61badae2048bf1159fe9dd3c",
                        "function": "preSavePage"
                    }
                },
                "http": {
                    "formType": "http",
                    "method": "GET",
                    "paging": {
                        "lastPageValues": []
                    },
                    "relativeURI": "/test",
                    "response": {
                        "failValues": [],
                        "successValues": []
                    }
                },
                "name": "Http export",
                "oneToMany": false,
                "parsers": [],
                "sandbox": false
            }
        },
        "flow": {
            "620ca211b738605d4ba0b690": {
                "autoResolveMatchingTraceKeys": true,
                "disabled": false,
                "name": "Flow with Script",
                "pageGenerators": [
                    {
                        "_exportId": "620ca225b738605d4ba0b692",
                        "skipRetries": false
                    }
                ],
                "pageProcessors": [
                    {
                        "_importId": "6203b04a887b312cb0811c8d",
                        "responseMapping": {
                            "fields": [],
                            "lists": []
                        },
                        "type": "import"
                    }
                ],
                "skipRetries": false
            }
        },
        "import": {
            "6203b04a887b312cb0811c8d": {
                "_connectionId": "61d439eb09cf7870de83d208",
                "adaptorType": "HTTPImport",
                "http": {
                    "batchSize": 1,
                    "body": [],
                    "formType": "http",
                    "method": [
                        "POST"
                    ],
                    "relativeURI": [
                        "/test"
                    ],
                    "sendPostMappedData": true
                },
                "ignoreExisting": false,
                "ignoreMissing": false,
                "lookups": [],
                "name": "Http imp",
                "oneToMany": false,
                "parsers": [],
                "sandbox": false
            }
        },
        "integration": {
            "620ca206b738605d4ba0b68e": {
                "flowGroupings": [],
                "install": [],
                "installSteps": [],
                "name": "Integration with Script",
                "sandbox": false,
                "uninstallSteps": []
            }
        },
        "script": {
            "61badae2048bf1159fe9dd3c": {
                "name": "My API",
                "$blob": "/*\n* handleRequest function stub:\n*\n* The name of the function can be changed to anything you like.\n*\n* The function will be passed one 'options' argument that has the following fields:\n*   'method' - http request method (uppercase string).\n*   'headers' - http request headers (object).  \n*   'queryString' - http request query string (object).\n*   'body' - parsed http request body (object, or undefined if unable to parse).\n*   'rawBody' - raw http request body (string).\n*\n* The function needs to return a response object that has the following fields:\n*   'statusCode' - http response status code (number).\n*   'headers' - http response headers overrides (object, optional).\n*   'body' - http response body (string or object).\n* Throwing an exception will signal an error.\n*/\nfunction handleRequest (options) {\n  return {\n    statusCode: 200,\n    headers: { },\n    body: options.body\n  }\n}"
            }
        }
    }
}