{"_userId":{
  "path": "_userId",
  "instance": "ObjectID",
  "validators": [
    {
      "message": "Path `{PATH}` is required.",
      "type": "required"
    }
  ],
  "setters": [],
  "getters": [],
  "options": {
    "required": true,
    "ref": "User",
    "index": true
  },
  "_index": true,
  "isRequired": true,
  "originalRequiredValue": true
},
"type":{
  "enumValues": [
    "netsuite",
    "salesforce",
    "ftp",
    "s3",
    "rest",
    "wrapper",
    "http",
    "rdbms",
    "mongodb",
    "as2"
  ],
  "regExp": null,
  "path": "type",
  "instance": "String",
  "validators": [
    {
      "message": "Path `{PATH}` is required.",
      "type": "required"
    },
    {
      "message": "`{VALUE}` is not a valid enum value for path `{PATH}`.",
      "type": "enum",
      "enumValues": [
        "netsuite",
        "salesforce",
        "ftp",
        "s3",
        "rest",
        "wrapper",
        "http",
        "rdbms",
        "mongodb",
        "as2"
      ]
    }
  ],
  "setters": [],
  "getters": [],
  "options": {
    "required": true,
    "enum": [
      "netsuite",
      "salesforce",
      "ftp",
      "s3",
      "rest",
      "wrapper",
      "http",
      "rdbms",
      "mongodb",
      "as2"
    ],
    "cLocked": true,
    "template": true
  },
  "_index": null,
  "isRequired": true,
  "originalRequiredValue": true
},
"createdAt":{
  "path": "createdAt",
  "instance": "Date",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"lastModified":{
  "path": "lastModified",
  "instance": "Date",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"name":{
  "enumValues": [],
  "regExp": null,
  "path": "name",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "cLocked": true,
    "template": true,
    "maxSize": 200,
    "patch": true
  },
  "_index": null
},
"offline":{
  "path": "offline",
  "instance": "Boolean",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"_integrationId":{
  "path": "_integrationId",
  "instance": "ObjectID",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "ref": "Integration"
  },
  "_index": null
},
"_connectorId":{
  "path": "_connectorId",
  "instance": "ObjectID",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "ref": "Connector"
  },
  "_index": null
},
"externalId":{
  "enumValues": [],
  "regExp": null,
  "path": "externalId",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "cLocked": true
  },
  "_index": null
},
"debugDate":{
  "path": "debugDate",
  "instance": "Date",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "patch": true
  },
  "_index": null
},
"_borrowConcurrencyFromConnectionId":{
  "path": "_borrowConcurrencyFromConnectionId",
  "instance": "ObjectID",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "ref": "Connection",
    "index": true
  },
  "_index": true
},
"__pingProcessRetryCount":{
  "path": "__pingProcessRetryCount",
  "instance": "Number",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"__pingProcessLastRunTime":{
  "path": "__pingProcessLastRunTime",
  "instance": "Date",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"assistant":{
  "enumValues": [
    "3dcart",
    "accelo",
    "adp",
    "amazonaws",
    "amazonmws",
    "anaplan",
    "ariba",
    "asana",
    "atera",
    "authorize.net",
    "avalara",
    "banking",
    "bigcommerce",
    "bill.com",
    "box",
    "braintree",
    "campaignmonitor",
    "certify",
    "chargebee",
    "chargify",
    "clover",
    "dcl",
    "desk",
    "dnb",
    "docusign",
    "doubleclick",
    "dropbox",
    "ebay",
    "ebay-xml",
    "eloquent",
    "etsy",
    "eventbrite",
    "exacterp",
    "expensify",
    "facebookads",
    "fieldaware",
    "freshbooks",
    "freshdesk",
    "ftp",
    "github",
    "gooddata",
    "google",
    "googleanalytics",
    "googlecontacts",
    "googledrive",
    "googlemail",
    "googlesheets",
    "googleshopping",
    "harvest",
    "hoovers",
    "hubspot",
    "hybris",
    "insightly",
    "integratorio",
    "jet",
    "jira",
    "jobvite",
    "lightspeed",
    "linkedin",
    "liquidplanner",
    "magento",
    "mailchimp",
    "mediaocean",
    "namely",
    "netsuite",
    "newegg",
    "newrelic",
    "okta",
    "openair",
    "osn",
    "other",
    "paychex",
    "paylocity",
    "paypal",
    "pulseway",
    "quickbooks",
    "recurly",
    "replicon",
    "s3",
    "sageone",
    "salesforce",
    "servicenow",
    "shiphawk",
    "shipstation",
    "shipwire",
    "shopify",
    "skubana",
    "slack",
    "smartsheet",
    "snapfulfil",
    "splunk",
    "spreecommerce",
    "squareup",
    "steelbrick",
    "stripe",
    "surveymonkey",
    "svb",
    "tableau",
    "tesco",
    "travis",
    "tsheets",
    "twilio",
    "walmart",
    "wiser",
    "woocommerce",
    "wrike",
    "xcart",
    "yahoo",
    "yammer",
    "zendesk",
    "zoho",
    "zuora",
    "coupa",
    "taxjar",
    "quip",
    "allbound",
    "zohocrm",
    "zohodesk",
    "microsoftoffice365",
    "microsoftdynamics365",
    "pitneybowes",
    "mysql",
    "postgresql",
    "mssql",
    "greenhouse",
    "shippo",
    "gusto",
    "easypost",
    "segment",
    "zohobooks",
    "microsoftbusinesscentral",
    "microsoftoutlookcalendar",
    "microsoftoutlookmail",
    "microsoftoutlookcontacts",
    "microsoftonenote",
    "wish",
    "pdffiller",
    "signnow",
    "acton",
    "acumatica",
    "mongodb",
    "zohomail",
    "zoom",
    "myobessentials",
    "nimble",
    "bronto",
    "strata",
    "returnly",
    "activecampaign",
    "klaviyo",
    "postmark",
    "powerbi",
    "procurify",
    "mailgun",
    "zimbra",
    "merchantesolutions",
    "aptrinsic",
    "cardknox",
    "skuvault",
    "nextag",
    "concur",
    "oandav20fxtrade",
    "oandaexchangerates",
    "spreecommerce",
    "tophatter",
    "concurv4",
    "sugarcrm",
    "marketo",
    "grms",
    "retailops",
    "sharepoint",
    "parseur",
    "authorize.net",
    "firstdata",
    "propack",
    "outreach",
    "ramplogistics",
    "constantcontactv3",
    "constantcontactv2",
    "concurall",
    "dunandbradstreet",
    "trinet",
    "pacejet",
    "solidcommercxe",
    "intercom",
    "bamboohr"
  ],
  "regExp": null,
  "path": "assistant",
  "instance": "String",
  "validators": [
    {
      "message": "`{VALUE}` is not a valid enum value for path `{PATH}`.",
      "type": "enum",
      "enumValues": [
        "3dcart",
        "accelo",
        "adp",
        "amazonaws",
        "amazonmws",
        "anaplan",
        "ariba",
        "asana",
        "atera",
        "authorize.net",
        "avalara",
        "banking",
        "bigcommerce",
        "bill.com",
        "box",
        "braintree",
        "campaignmonitor",
        "certify",
        "chargebee",
        "chargify",
        "clover",
        "dcl",
        "desk",
        "dnb",
        "docusign",
        "doubleclick",
        "dropbox",
        "ebay",
        "ebay-xml",
        "eloquent",
        "etsy",
        "eventbrite",
        "exacterp",
        "expensify",
        "facebookads",
        "fieldaware",
        "freshbooks",
        "freshdesk",
        "ftp",
        "github",
        "gooddata",
        "google",
        "googleanalytics",
        "googlecontacts",
        "googledrive",
        "googlemail",
        "googlesheets",
        "googleshopping",
        "harvest",
        "hoovers",
        "hubspot",
        "hybris",
        "insightly",
        "integratorio",
        "jet",
        "jira",
        "jobvite",
        "lightspeed",
        "linkedin",
        "liquidplanner",
        "magento",
        "mailchimp",
        "mediaocean",
        "namely",
        "netsuite",
        "newegg",
        "newrelic",
        "okta",
        "openair",
        "osn",
        "other",
        "paychex",
        "paylocity",
        "paypal",
        "pulseway",
        "quickbooks",
        "recurly",
        "replicon",
        "s3",
        "sageone",
        "salesforce",
        "servicenow",
        "shiphawk",
        "shipstation",
        "shipwire",
        "shopify",
        "skubana",
        "slack",
        "smartsheet",
        "snapfulfil",
        "splunk",
        "spreecommerce",
        "squareup",
        "steelbrick",
        "stripe",
        "surveymonkey",
        "svb",
        "tableau",
        "tesco",
        "travis",
        "tsheets",
        "twilio",
        "walmart",
        "wiser",
        "woocommerce",
        "wrike",
        "xcart",
        "yahoo",
        "yammer",
        "zendesk",
        "zoho",
        "zuora",
        "coupa",
        "taxjar",
        "quip",
        "allbound",
        "zohocrm",
        "zohodesk",
        "microsoftoffice365",
        "microsoftdynamics365",
        "pitneybowes",
        "mysql",
        "postgresql",
        "mssql",
        "greenhouse",
        "shippo",
        "gusto",
        "easypost",
        "segment",
        "zohobooks",
        "microsoftbusinesscentral",
        "microsoftoutlookcalendar",
        "microsoftoutlookmail",
        "microsoftoutlookcontacts",
        "microsoftonenote",
        "wish",
        "pdffiller",
        "signnow",
        "acton",
        "acumatica",
        "mongodb",
        "zohomail",
        "zoom",
        "myobessentials",
        "nimble",
        "bronto",
        "strata",
        "returnly",
        "activecampaign",
        "klaviyo",
        "postmark",
        "powerbi",
        "procurify",
        "mailgun",
        "zimbra",
        "merchantesolutions",
        "aptrinsic",
        "cardknox",
        "skuvault",
        "nextag",
        "concur",
        "oandav20fxtrade",
        "oandaexchangerates",
        "spreecommerce",
        "tophatter",
        "concurv4",
        "sugarcrm",
        "marketo",
        "grms",
        "retailops",
        "sharepoint",
        "parseur",
        "authorize.net",
        "firstdata",
        "propack",
        "outreach",
        "ramplogistics",
        "constantcontactv3",
        "constantcontactv2",
        "concurall",
        "dunandbradstreet",
        "trinet",
        "pacejet",
        "solidcommerce",
        "intercom",
        "bamboohr"
      ]
    }
  ],
  "setters": [],
  "getters": [],
  "options": {
    "enum": [
      "3dcart",
      "accelo",
      "adp",
      "amazonaws",
      "amazonmws",
      "anaplan",
      "ariba",
      "asana",
      "atera",
      "authorize.net",
      "avalara",
      "banking",
      "bigcommerce",
      "bill.com",
      "box",
      "braintree",
      "campaignmonitor",
      "certify",
      "chargebee",
      "chargify",
      "clover",
      "dcl",
      "desk",
      "dnb",
      "docusign",
      "doubleclick",
      "dropbox",
      "ebay",
      "ebay-xml",
      "eloquent",
      "etsy",
      "eventbrite",
      "exacterp",
      "expensify",
      "facebookads",
      "fieldaware",
      "freshbooks",
      "freshdesk",
      "ftp",
      "github",
      "gooddata",
      "google",
      "googleanalytics",
      "googlecontacts",
      "googledrive",
      "googlemail",
      "googlesheets",
      "googleshopping",
      "harvest",
      "hoovers",
      "hubspot",
      "hybris",
      "insightly",
      "integratorio",
      "jet",
      "jira",
      "jobvite",
      "lightspeed",
      "linkedin",
      "liquidplanner",
      "magento",
      "mailchimp",
      "mediaocean",
      "namely",
      "netsuite",
      "newegg",
      "newrelic",
      "okta",
      "openair",
      "osn",
      "other",
      "paychex",
      "paylocity",
      "paypal",
      "pulseway",
      "quickbooks",
      "recurly",
      "replicon",
      "s3",
      "sageone",
      "salesforce",
      "servicenow",
      "shiphawk",
      "shipstation",
      "shipwire",
      "shopify",
      "skubana",
      "slack",
      "smartsheet",
      "snapfulfil",
      "splunk",
      "spreecommerce",
      "squareup",
      "steelbrick",
      "stripe",
      "surveymonkey",
      "svb",
      "tableau",
      "tesco",
      "travis",
      "tsheets",
      "twilio",
      "walmart",
      "wiser",
      "woocommerce",
      "wrike",
      "xcart",
      "yahoo",
      "yammer",
      "zendesk",
      "zoho",
      "zuora",
      "coupa",
      "taxjar",
      "quip",
      "allbound",
      "zohocrm",
      "zohodesk",
      "microsoftoffice365",
      "microsoftdynamics365",
      "pitneybowes",
      "mysql",
      "postgresql",
      "mssql",
      "greenhouse",
      "shippo",
      "gusto",
      "easypost",
      "segment",
      "zohobooks",
      "microsoftbusinesscentral",
      "microsoftoutlookcalendar",
      "microsoftoutlookmail",
      "microsoftoutlookcontacts",
      "microsoftonenote",
      "wish",
      "pdffiller",
      "signnow",
      "acton",
      "acumatica",
      "mongodb",
      "zohomail",
      "zoom",
      "myobessentials",
      "nimble",
      "bronto",
      "strata",
      "returnly",
      "activecampaign",
      "klaviyo",
      "postmark",
      "powerbi",
      "procurify",
      "mailgun",
      "zimbra",
      "merchantesolutions",
      "aptrinsic",
      "cardknox",
      "skuvault",
      "nextag",
      "concur",
      "oandav20fxtrade",
      "oandaexchangerates",
      "spreecommerce",
      "tophatter",
      "concurv4",
      "sugarcrm",
      "marketo",
      "grms",
      "retailops",
      "sharepoint",
      "parseur",
      "authorize.net",
      "firstdata",
      "propack",
      "outreach",
      "ramplogistics",
      "constantcontactv3",
      "constantcontactv2",
      "concurall",
      "dunandbradstreet",
      "trinet",
      "pacejet",
      "solidcommerce",
      "intercom",
      "bamboohr"
    ],
    "cLocked": true,
    "template": true
  },
  "_index": null
},
"sandbox":{
  "path": "sandbox",
  "instance": "Boolean",
  "validators": [],
  "setters": [
    null
  ],
  "getters": [],
  "options": {},
  "_index": null
},
"_agentId":{
  "path": "_agentId",
  "instance": "ObjectID",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "ref": "Agent"
  },
  "_index": null
},
"deletedAt":{
  "path": "deletedAt",
  "instance": "Date",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"_id":{
  "path": "_id",
  "instance": "ObjectID",
  "validators": [],
  "setters": [
    null
  ],
  "getters": [],
  "options": {
    "auto": true
  },
  "_index": null
},
"rdbms.type":{
  "enumValues": [
    "mysql",
    "postgresql",
    "mssql"
  ],
  "regExp": null,
  "path": "rdbms.type",
  "instance": "String",
  "validators": [
    {
      "message": "`{VALUE}` is not a valid enum value for path `{PATH}`.",
      "type": "enum",
      "enumValues": [
        "mysql",
        "postgresql",
        "mssql"
      ]
    }
  ],
  "setters": [],
  "getters": [],
  "options": {
    "enum": [
      "mysql",
      "postgresql",
      "mssql"
    ],
    "cLocked": true,
    "template": true
  },
  "_index": null
},
"rdbms.host":{
  "enumValues": [],
  "regExp": null,
  "path": "rdbms.host",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"rdbms.port":{
  "path": "rdbms.port",
  "instance": "Number",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"rdbms.database":{
  "enumValues": [],
  "regExp": null,
  "path": "rdbms.database",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"rdbms.instanceName":{
  "enumValues": [],
  "regExp": null,
  "path": "rdbms.instanceName",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"rdbms.user":{
  "enumValues": [],
  "regExp": null,
  "path": "rdbms.user",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"rdbms.password_crypt":{
  "enumValues": [],
  "regExp": null,
  "path": "rdbms.password_crypt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"rdbms.password_salt":{
  "enumValues": [],
  "regExp": null,
  "path": "rdbms.password_salt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"rdbms.ssl.ca_crypt":{
  "enumValues": [],
  "regExp": null,
  "path": "rdbms.ssl.ca_crypt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "maxSize": 20480
  },
  "_index": null
},
"rdbms.ssl.ca_salt":{
  "enumValues": [],
  "regExp": null,
  "path": "rdbms.ssl.ca_salt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"rdbms.ssl.key_crypt":{
  "enumValues": [],
  "regExp": null,
  "path": "rdbms.ssl.key_crypt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "maxSize": 20480
  },
  "_index": null
},
"rdbms.ssl.key_salt":{
  "enumValues": [],
  "regExp": null,
  "path": "rdbms.ssl.key_salt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"rdbms.ssl.passphrase_crypt":{
  "enumValues": [],
  "regExp": null,
  "path": "rdbms.ssl.passphrase_crypt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"rdbms.ssl.passphrase_salt":{
  "enumValues": [],
  "regExp": null,
  "path": "rdbms.ssl.passphrase_salt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"rdbms.ssl.cert_crypt":{
  "enumValues": [],
  "regExp": null,
  "path": "rdbms.ssl.cert_crypt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "maxSize": 20480
  },
  "_index": null
},
"rdbms.ssl.cert_salt":{
  "enumValues": [],
  "regExp": null,
  "path": "rdbms.ssl.cert_salt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"rdbms.concurrencyLevel":{
  "path": "rdbms.concurrencyLevel",
  "instance": "Number",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"rest.mediaType":{
  "enumValues": [
    "json",
    "urlencoded",
    "xml",
    "csv"
  ],
  "regExp": null,
  "path": "rest.mediaType",
  "instance": "String",
  "validators": [
    {
      "message": "`{VALUE}` is not a valid enum value for path `{PATH}`.",
      "type": "enum",
      "enumValues": [
        "json",
        "urlencoded",
        "xml",
        "csv"
      ]
    }
  ],
  "setters": [
    null
  ],
  "getters": [],
  "options": {
    "enum": [
      "json",
      "urlencoded",
      "xml",
      "csv"
    ],
    "lowercase": true,
    "cLocked": true,
    "template": true
  },
  "_index": null
},
"rest.baseURI":{
  "enumValues": [],
  "regExp": null,
  "path": "rest.baseURI",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"rest.bearerToken_crypt":{
  "enumValues": [],
  "regExp": null,
  "path": "rest.bearerToken_crypt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "maxSize": 20480
  },
  "_index": null
},
"rest.bearerToken_salt":{
  "enumValues": [],
  "regExp": null,
  "path": "rest.bearerToken_salt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"rest.tokenLocation":{
  "enumValues": [
    "header",
    "url"
  ],
  "regExp": null,
  "path": "rest.tokenLocation",
  "instance": "String",
  "validators": [
    {
      "message": "`{VALUE}` is not a valid enum value for path `{PATH}`.",
      "type": "enum",
      "enumValues": [
        "header",
        "url"
      ]
    }
  ],
  "setters": [
    null
  ],
  "getters": [],
  "options": {
    "enum": [
      "header",
      "url"
    ],
    "lowercase": true,
    "template": true
  },
  "_index": null
},
"rest.tokenParam":{
  "enumValues": [],
  "regExp": null,
  "path": "rest.tokenParam",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"rest.scope[*]":{
  "type": [
    null
  ],
  "cLocked": true,
  "template": true
},
"rest.scopeDelimiter":{
  "enumValues": [],
  "regExp": null,
  "path": "rest.scopeDelimiter",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "cLocked": true,
    "template": true
  },
  "_index": null
},
"rest.refreshToken_crypt":{
  "enumValues": [],
  "regExp": null,
  "path": "rest.refreshToken_crypt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "maxSize": 20480
  },
  "_index": null
},
"rest.refreshToken_salt":{
  "enumValues": [],
  "regExp": null,
  "path": "rest.refreshToken_salt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"rest.oauthTokenURI":{
  "enumValues": [],
  "regExp": null,
  "path": "rest.oauthTokenURI",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"rest.disableStrictSSL":{
  "path": "rest.disableStrictSSL",
  "instance": "Boolean",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"rest.authType":{
  "enumValues": [
    "basic",
    "token",
    "oauth",
    "custom",
    "cookie",
    "jwt",
    "hmac",
    "wsse"
  ],
  "regExp": null,
  "path": "rest.authType",
  "instance": "String",
  "validators": [
    {
      "message": "`{VALUE}` is not a valid enum value for path `{PATH}`.",
      "type": "enum",
      "enumValues": [
        "basic",
        "token",
        "oauth",
        "custom",
        "cookie",
        "jwt",
        "hmac",
        "wsse"
      ]
    }
  ],
  "setters": [],
  "getters": [],
  "options": {
    "enum": [
      "basic",
      "token",
      "oauth",
      "custom",
      "cookie",
      "jwt",
      "hmac",
      "wsse"
    ],
    "template": true
  },
  "_index": null
},
"rest.authURI":{
  "enumValues": [],
  "regExp": null,
  "path": "rest.authURI",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"rest.authHeader":{
  "enumValues": [],
  "regExp": null,
  "path": "rest.authHeader",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"rest.retryHeader":{
  "enumValues": [],
  "regExp": null,
  "path": "rest.retryHeader",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"rest.authScheme":{
  "enumValues": [
    "MAC",
    "OAuth",
    "Bearer",
    "Hmac",
    " "
  ],
  "regExp": null,
  "path": "rest.authScheme",
  "instance": "String",
  "validators": [
    {
      "message": "`{VALUE}` is not a valid enum value for path `{PATH}`.",
      "type": "enum",
      "enumValues": [
        "MAC",
        "OAuth",
        "Bearer",
        "Hmac",
        " "
      ]
    }
  ],
  "setters": [],
  "getters": [],
  "options": {
    "enum": [
      "MAC",
      "OAuth",
      "Bearer",
      "Hmac",
      " "
    ],
    "template": true
  },
  "_index": null
},
"rest.basicAuth.username":{
  "enumValues": [],
  "regExp": null,
  "path": "rest.basicAuth.username",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"rest.basicAuth.password_crypt":{
  "enumValues": [],
  "regExp": null,
  "path": "rest.basicAuth.password_crypt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"rest.basicAuth.password_salt":{
  "enumValues": [],
  "regExp": null,
  "path": "rest.basicAuth.password_salt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"rest.cookieAuth.uri":{
  "enumValues": [],
  "regExp": null,
  "path": "rest.cookieAuth.uri",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"rest.cookieAuth.body":{
  "enumValues": [],
  "regExp": null,
  "path": "rest.cookieAuth.body",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"rest.cookieAuth.method":{
  "enumValues": [],
  "regExp": null,
  "path": "rest.cookieAuth.method",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"rest.cookieAuth.successStatusCode":{
  "path": "rest.cookieAuth.successStatusCode",
  "instance": "Number",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true,
    "patch": true
  },
  "_index": null
},
"rest.headers[*].name":{
  "template": true
},
"rest.headers[*].value":{
  "template": true,
  "maxSize": 4096
},
"rest.encrypted_crypt":{
  "enumValues": [],
  "regExp": null,
  "path": "rest.encrypted_crypt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "maxSize": 20480
  },
  "_index": null
},
"rest.encrypted_salt":{
  "enumValues": [],
  "regExp": null,
  "path": "rest.encrypted_salt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"rest.encryptedFields[*].id":{},
"rest.encryptedFields[*].label":{},
"rest.encryptedFields[*].required":{
  "default": false
},
"rest.encryptedFields[*].position":{},
"rest.encryptedFields[*].helpText":{},
"rest.unencrypted":{
  "path": "rest.unencrypted",
  "instance": "Mixed",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"rest.unencryptedFields[*].id":{},
"rest.unencryptedFields[*].label":{},
"rest.unencryptedFields[*].required":{
  "default": false
},
"rest.unencryptedFields[*].position":{},
"rest.unencryptedFields[*].helpText":{},
"rest.unencryptedFields[*].type":{},
"rest.oauth.accessTokenPath":{
  "enumValues": [],
  "regExp": null,
  "path": "rest.oauth.accessTokenPath",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"rest.oauth.grantType":{
  "enumValues": [
    "authorizecode",
    "password"
  ],
  "regExp": null,
  "path": "rest.oauth.grantType",
  "instance": "String",
  "validators": [
    {
      "message": "`{VALUE}` is not a valid enum value for path `{PATH}`.",
      "type": "enum",
      "enumValues": [
        "authorizecode",
        "password"
      ]
    }
  ],
  "setters": [
    null
  ],
  "getters": [],
  "options": {
    "enum": [
      "authorizecode",
      "password"
    ],
    "lowercase": true,
    "template": true
  },
  "_index": null
},
"rest.oauth.username":{
  "enumValues": [],
  "regExp": null,
  "path": "rest.oauth.username",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"rest.oauth.password_crypt":{
  "enumValues": [],
  "regExp": null,
  "path": "rest.oauth.password_crypt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"rest.oauth.password_salt":{
  "enumValues": [],
  "regExp": null,
  "path": "rest.oauth.password_salt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"rest.refreshTokenMethod":{
  "enumValues": [],
  "regExp": null,
  "path": "rest.refreshTokenMethod",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"rest.refreshTokenBody":{
  "enumValues": [],
  "regExp": null,
  "path": "rest.refreshTokenBody",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"rest.refreshTokenURI":{
  "enumValues": [],
  "regExp": null,
  "path": "rest.refreshTokenURI",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"rest.refreshTokenPath":{
  "enumValues": [],
  "regExp": null,
  "path": "rest.refreshTokenPath",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"rest.refreshTokenMediaType":{
  "enumValues": [
    "json",
    "urlencoded"
  ],
  "regExp": null,
  "path": "rest.refreshTokenMediaType",
  "instance": "String",
  "validators": [
    {
      "message": "`{VALUE}` is not a valid enum value for path `{PATH}`.",
      "type": "enum",
      "enumValues": [
        "json",
        "urlencoded"
      ]
    }
  ],
  "setters": [
    null
  ],
  "getters": [],
  "options": {
    "enum": [
      "json",
      "urlencoded"
    ],
    "lowercase": true,
    "cLocked": true,
    "template": true
  },
  "_index": null
},
"rest.refreshTokenHeaders[*].name":{
  "template": true
},
"rest.refreshTokenHeaders[*].value":{
  "template": true
},
"rest._iClientId":{
  "path": "rest._iClientId",
  "instance": "ObjectID",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "ref": "IClient"
  },
  "_index": null
},
"rest.info":{
  "path": "rest.info",
  "instance": "Mixed",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"rest.pingRela tiveURI":{
  "enumValues": [],
  "regExp": null,
  "path": "rest.pingRelativeURI",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"rest.pingSuccessPath":{
  "enumValues": [],
  "regExp": null,
  "path": "rest.pingSuccessPath",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"rest.pingSuccessValues[*]":{
  "template": true,
  "instance": "Mixed",
  "validators": [],
  "setters": [],
  "getters": [],
  "_index": null
},
"rest.pingFailurePath":{
  "enumValues": [],
  "regExp": null,
  "path": "rest.pingFailurePath",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"rest.pingFailureValues[*]":{
  "template": true,
  "instance": "Mixed",
  "validators": [],
  "setters": [],
  "getters": [],
  "_index": null
},
"rest.concurrencyLevel":{
  "path": "rest.concurrencyLevel",
  "instance": "Number",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"rest.pingMethod":{
  "enumValues": [
    "GET",
    "POST"
  ],
  "regExp": null,
  "path": "rest.pingMethod",
  "instance": "String",
  "validators": [
    {
      "message": "`{VALUE}` is not a valid enum value for path `{PATH}`.",
      "type": "enum",
      "enumValues": [
        "GET",
        "POST"
      ]
    }
  ],
  "setters": [
    null
  ],
  "getters": [],
  "options": {
    "enum": [
      "GET",
      "POST"
    ],
    "uppercase": true,
    "template": true
  },
  "_index": null
},
"rest.pingBody":{
  "enumValues": [],
  "regExp": null,
  "path": "rest.pingBody",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true,
    "maxSize": 10240
  },
  "_index": null
},
"http._iClientId":{
  "path": "http._iClientId",
  "instance": "ObjectID",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "ref": "IClient"
  },
  "_index": null
},
"http.mediaType":{
  "enumValues": [
    "xml",
    "json"
  ],
  "regExp": null,
  "path": "http.mediaType",
  "instance": "String",
  "validators": [
    {
      "message": "`{VALUE}` is not a valid enum value for path `{PATH}`.",
      "type": "enum",
      "enumValues": [
        "xml",
        "json"
      ]
    }
  ],
  "setters": [
    null
  ],
  "getters": [],
  "options": {
    "enum": [
      "xml",
      "json"
    ],
    "lowercase": true,
    "template": true
  },
  "_index": null
},
"http.baseURI":{
  "enumValues": [],
  "regExp": null,
  "path": "http.baseURI",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"http.disableStrictSSL":{
  "path": "http.disableStrictSSL",
  "instance": "Boolean",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"http.concurrencyLevel":{
  "path": "http.concurrencyLevel",
  "instance": "Number",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"http.retryHeader":{
  "enumValues": [],
  "regExp": null,
  "path": "http.retryHeader",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"http.ping.relativeURI":{
  "enumValues": [],
  "regExp": null,
  "path": "http.ping.relativeURI",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"http.ping.method":{
  "enumValues": [
    "GET",
    "POST",
    "PUT",
    "HEAD"
  ],
  "regExp": null,
  "path": "http.ping.method",
  "instance": "String",
  "validators": [
    {
      "message": "`{VALUE}` is not a valid enum value for path `{PATH}`.",
      "type": "enum",
      "enumValues": [
        "GET",
        "POST",
        "PUT",
        "HEAD"
      ]
    }
  ],
  "setters": [
    null
  ],
  "getters": [],
  "options": {
    "enum": [
      "GET",
      "POST",
      "PUT",
      "HEAD"
    ],
    "uppercase": true,
    "template": true
  },
  "_index": null
},
"http.ping.body":{
  "enumValues": [],
  "regExp": null,
  "path": "http.ping.body",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true,
    "maxSize": 10240
  },
  "_index": null
},
"http.ping.successPath":{
  "enumValues": [],
  "regExp": null,
  "path": "http.ping.successPath",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true,
    "patch": true
  },
  "_index": null
},
"http.ping.successValues[*]":{
  "template": true,
  "patch": true
},
"http.ping.errorPath":{
  "enumValues": [],
  "regExp": null,
  "path": "http.ping.errorPath",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"http.ping._id":{
  "path": "http.ping._id",
  "instance": "Mixed",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "type": false
  },
  "_index": null
},
"http.auth.type":{
  "enumValues": [
    "custom",
    "basic",
    "token",
    "oauth"
  ],
  "regExp": null,
  "path": "http.auth.type",
  "instance": "String",
  "validators": [
    {
      "message": "`{VALUE}` is not a valid enum value for path `{PATH}`.",
      "type": "enum",
      "enumValues": [
        "custom",
        "basic",
        "token",
        "oauth"
      ]
    }
  ],
  "setters": [
    null
  ],
  "getters": [],
  "options": {
    "enum": [
      "custom",
      "basic",
      "token",
      "oauth"
    ],
    "lowercase": true,
    "template": true
  },
  "_index": null
},
"http.auth.failStatusCode":{
  "path": "http.auth.failStatusCode",
  "instance": "Number",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true,
    "patch": true
  },
  "_index": null
},
"http.auth.failPath":{
  "enumValues": [],
  "regExp": null,
  "path": "http.auth.failPath",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true,
    "patch": true
  },
  "_index": null
}
,"http.auth.failValues[*]":{
  "template": true,
  "patch": true,
  "_id": false
},
"http.auth.basic.username":{
  "enumValues": [],
  "regExp": null,
  "path": "http.auth.basic.username",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"http.auth.basic.password_crypt":{
  "enumValues": [],
  "regExp": null,
  "path": "http.auth.basic.password_crypt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"http.auth.basic.password_salt":{
  "enumValues": [],
  "regExp": null,
  "path": "http.auth.basic.password_salt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"http.auth.oauth.authURI":{
  "enumValues": [],
  "regExp": null,
  "path": "http.auth.oauth.authURI",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"http.auth.oauth.tokenURI":{
  "enumValues": [],
  "regExp": null,
  "path": "http.auth.oauth.tokenURI",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"http.auth.oauth.scope[*]":{
  "type": [
    null
  ],
  "cLocked": true,
  "template": true
},
"http.auth.oauth.scopeDelimiter":{
  "enumValues": [],
  "regExp": null,
  "path": "http.auth.oauth.scopeDelimiter",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "cLocked": true,
    "template": true
  },
  "_index": null
},
"http.auth.oauth.accessTokenPath":{
  "enumValues": [],
  "regExp": null,
  "path": "http.auth.oauth.accessTokenPath",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"http.auth.oauth.grantType":{
  "enumValues": [
    "authorizecode",
    "password"
  ],
  "regExp": null,
  "path": "http.auth.oauth.grantType",
  "instance": "String",
  "validators": [
    {
      "message": "`{VALUE}` is not a valid enum value for path `{PATH}`.",
      "type": "enum",
      "enumValues": [
        "authorizecode",
        "password"
      ]
    }
  ],
  "setters": [
    null
  ],
  "getters": [],
  "options": {
    "enum": [
      "authorizecode",
      "password"
    ],
    "lowercase": true,
    "template": true
  },
  "_index": null
},
"http.auth.oauth.username":{
  "enumValues": [],
  "regExp": null,
  "path": "http.auth.oauth.username",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"http.auth.oauth.password_crypt":{
  "enumValues": [],
  "regExp": null,
  "path": "http.auth.oauth.password_crypt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"http.auth.oauth.password_salt":{
  "enumValues": [],
  "regExp": null,
  "path": "http.auth.oauth.password_salt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"http.auth.token.token_crypt":{
  "enumValues": [],
  "regExp": null,
  "path": "http.auth.token.token_crypt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "maxSize": 20480
  },
  "_index": null
},
"http.auth.token.token_salt":{
  "enumValues": [],
  "regExp": null,
  "path": "http.auth.token.token_salt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"http.auth.token.location":{
  "enumValues": [
    "url",
    "header",
    "body"
  ],
  "regExp": null,
  "path": "http.auth.token.location",
  "instance": "String",
  "validators": [
    {
      "message": "`{VALUE}` is not a valid enum value for path `{PATH}`.",
      "type": "enum",
      "enumValues": [
        "url",
        "header",
        "body"
      ]
    }
  ],
  "setters": [],
  "getters": [],
  "options": {
    "enum": [
      "url",
      "header",
      "body"
    ],
    "template": true
  },
  "_index": null
},
"http.auth.token.headerName":{
  "enumValues": [],
  "regExp": null,
  "path": "http.auth.token.headerName",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"http.auth.token.scheme":{
  "enumValues": [],
  "regExp": null,
  "path": "http.auth.token.scheme",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"http.auth.token.paramName":{
  "enumValues": [],
  "regExp": null,
  "path": "http.auth.token.paramName",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"http.auth.token.refreshMethod":{
  "enumValues": [
    "GET",
    "POST"
  ],
  "regExp": null,
  "path": "http.auth.token.refreshMethod",
  "instance": "String",
  "validators": [
    {
      "message": "`{VALUE}` is not a valid enum value for path `{PATH}`.",
      "type": "enum",
      "enumValues": [
        "GET",
        "POST"
      ]
    }
  ],
  "setters": [
    null
  ],
  "getters": [],
  "options": {
    "enum": [
      "GET",
      "POST"
    ],
    "uppercase": true,
    "template": true
  },
  "_index": null
},
"http.auth.token.refreshRelativeURI":{
  "enumValues": [],
  "regExp": null,
  "path": "http.auth.token.refreshRelativeURI",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"http.auth.token.refreshBody":{
  "enumValues": [],
  "regExp": null,
  "path": "http.auth.token.refreshBody",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"http.auth.token.refreshTokenPath":{
  "enumValues": [],
  "regExp": null,
  "path": "http.auth.token.refreshTokenPath",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"http.auth.token.refreshMediaType":{
  "enumValues": [
    "json",
    "urlencoded",
    "xml"
  ],
  "regExp": null,
  "path": "http.auth.token.refreshMediaType",
  "instance": "String",
  "validators": [
    {
      "message": "`{VALUE}` is not a valid enum value for path `{PATH}`.",
      "type": "enum",
      "enumValues": [
        "json",
        "urlencoded",
        "xml"
      ]
    }
  ],
  "setters": [
    null
  ],
  "getters": [],
  "options": {
    "enum": [
      "json",
      "urlencoded",
      "xml"
    ],
    "lowercase": true,
    "template": true
  },
  "_index": null
},
"http.auth.token.refreshHeaders[*].name":{
  "template": true
},
"http.auth.token.refreshHeaders[*].value":{
  "template": true
},
"http.auth.token.refreshToken_crypt":{
  "enumValues": [],
  "regExp": null,
  "path": "http.auth.token.refreshToken_crypt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "maxSize": 20480
  },
  "_index": null
},
"http.auth.token.refreshToken_salt":{
  "enumValues": [],
  "regExp": null,
  "path": "http.auth.token.refreshToken_salt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"http.auth._id":{
  "path": "http.auth._id",
  "instance": "Mixed",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "type": false
  },
  "_index": null
},
"http.rateLimit.failStatusCode":{
  "path": "http.rateLimit.failStatusCode",
  "instance": "Number",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true,
    "patch": true
  },
  "_index": null
},
"http.rateLimit.failPath":{
  "enumValues": [],
  "regExp": null,
  "path": "http.rateLimit.failPath",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true,
    "patch": true
  },
  "_index": null
},
"http.rateLimit.failValues[*]":{
  "template": true,
  "patch": true,
  "_id": false
},
"http.rateLimit.limit":{
  "path": "http.rateLimit.limit",
  "instance": "Number",
  "validators": [
    {
      "message": "Path `{PATH}` ({VALUE}) is less than minimum allowed value (1).",
      "type": "min",
      "min": 1
    }
  ],
  "setters": [],
  "getters": [],
  "options": {
    "min": 1,
    "template": true,
    "patch": true
  },
  "_index": null
},
"http.rateLimit._id":{
  "path": "http.rateLimit._id",
  "instance": "Mixed",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "type": false
  },
  "_index": null
},
"http.headers[*].name":{
  "template": true
},
"http.headers[*].value":{
  "template": true
},
"http.unencrypted":{
  "path": "http.unencrypted",
  "instance": "Mixed",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"http.encrypted_crypt":{
  "enumValues": [],
  "regExp": null,
  "path": "http.encrypted_crypt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "maxSize": 20480
  },
  "_index": null
},
"http.encrypted_salt":{
  "enumValues": [],
  "regExp": null,
  "path": "http.encrypted_salt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"http.encryptedFields[*].id":{},
"http.encryptedFields[*].label":{},
"http.encryptedFields[*].required":{
  "default": false
},
"http.encryptedFields[*].position":{},
"http.encryptedFields[*].helpText":{},
"ftp.type":{
  "enumValues": [
    "ftp",
    "sftp",
    "ftps"
  ],
  "regExp": null,
  "path": "ftp.type",
  "instance": "String",
  "validators": [
    {
      "message": "`{VALUE}` is not a valid enum value for path `{PATH}`.",
      "type": "enum",
      "enumValues": [
        "ftp",
        "sftp",
        "ftps"
      ]
    }
  ],
  "setters": [],
  "getters": [],
  "options": {
    "enum": [
      "ftp",
      "sftp",
      "ftps"
    ],
    "template": true
  },
  "_index": null
},
"ftp.hostURI":{
  "enumValues": [],
  "regExp": null,
  "path": "ftp.hostURI",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"ftp.username":{
  "enumValues": [],
  "regExp": null,
  "path": "ftp.username",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"ftp.password_crypt":{
  "enumValues": [],
  "regExp": null,
  "path": "ftp.password_crypt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"ftp.password_salt":{
  "enumValues": [],
  "regExp": null,
  "path": "ftp.password_salt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"ftp.authKey_crypt":{
  "enumValues": [],
  "regExp": null,
  "path": "ftp.authKey_crypt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "maxSize": 20480
  },
  "_index": null
},
"ftp.authKey_salt":{
  "enumValues": [],
  "regExp": null,
  "path": "ftp.authKey_salt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"ftp.port":{
  "path": "ftp.port",
  "instance": "Number",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"ftp.usePassiveMode":{
  "path": "ftp.usePassiveMode",
  "instance": "Boolean",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},"ftp.entryParser":{
  "enumValues": [
    "UNIX",
    "UNIX-TRIM",
    "VMS",
    "WINDOWS",
    "OS/2",
    "OS/400",
    "AS/400",
    "MVS",
    "UNKNOWN-TYPE",
    "NETWARE",
    "MACOS-PETER"
  ],
  "regExp": null,
  "path": "ftp.entryParser",
  "instance": "String",
  "validators": [
    {
      "message": "`{VALUE}` is not a valid enum value for path `{PATH}`.",
      "type": "enum",
      "enumValues": [
        "UNIX",
        "UNIX-TRIM",
        "VMS",
        "WINDOWS",
        "OS/2",
        "OS/400",
        "AS/400",
        "MVS",
        "UNKNOWN-TYPE",
        "NETWARE",
        "MACOS-PETER"
      ]
    }
  ],
  "setters": [
    null
  ],
  "getters": [],
  "options": {
    "enum": [
      "UNIX",
      "UNIX-TRIM",
      "VMS",
      "WINDOWS",
      "OS/2",
      "OS/400",
      "AS/400",
      "MVS",
      "UNKNOWN-TYPE",
      "NETWARE",
      "MACOS-PETER"
    ],
    "uppercase": true
  },
  "_index": null
},
"ftp.userDirectoryIsRoot":{
  "path": "ftp.userDirectoryIsRoot",
  "instance": "Boolean",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"ftp.useImplicitFtps":{
  "path": "ftp.useImplicitFtps",
  "instance": "Boolean",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"ftp.requireSocketReUse":{
  "path": "ftp.requireSocketReUse",
  "instance": "Boolean",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"ftp.pgpEncryptKey_crypt":{
  "enumValues": [],
  "regExp": null,
  "path": "ftp.pgpEncryptKey_crypt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "maxSize": 20480
  },
  "_index": null
},
"ftp.pgpEncryptKey_salt":{
  "enumValues": [],
  "regExp": null,
  "path": "ftp.pgpEncryptKey_salt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"ftp.pgpDecryptKey_crypt":{
  "enumValues": [],
  "regExp": null,
  "path": "ftp.pgpDecryptKey_crypt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "maxSize": 20480
  },
  "_index": null
},
"ftp.pgpDecryptKey_salt":{
  "enumValues": [],
  "regExp": null,
  "path": "ftp.pgpDecryptKey_salt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"ftp.pgpPassphrase_crypt":{
  "enumValues": [],
  "regExp": null,
  "path": "ftp.pgpPassphrase_crypt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"ftp.pgpPassphrase_salt":{
  "enumValues": [],
  "regExp": null,
  "path": "ftp.pgpPassphrase_salt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"s3.accessKeyId":{
  "enumValues": [],
  "regExp": null,
  "path": "s3.accessKeyId",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"s3.secretAccessKey_crypt":{
  "enumValues": [],
  "regExp": null,
  "path": "s3.secretAccessKey_crypt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"s3.secretAccessKey_salt":{
  "enumValues": [],
  "regExp": null,
  "path": "s3.secretAccessKey_salt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"s3.pingBucket":{
  "enumValues": [],
  "regExp": null,
  "path": "s3.pingBucket",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"as2.as2Id":{
  "enumValues": [],
  "regExp": null,
  "path": "as2.as2Id",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"as2.partnerId":{
  "enumValues": [],
  "regExp": null,
  "path": "as2.partnerId",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"as2.contentBasedFlowRouter.function":{
  "enumValues": [],
  "regExp": null,
  "path": "as2.contentBasedFlowRouter.function",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true,
    "patch": true
  },
  "_index": null
},
"as2.contentBasedFlowRouter._scriptId":{
  "path": "as2.contentBasedFlowRouter._scriptId",
  "instance": "ObjectID",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "ref": "Script",
    "patch": true
  },
  "_index": null
},
"as2.partnerStationInfo.as2URI":{
  "enumValues": [],
  "regExp": null,
  "path": "as2.partnerStationInfo.as2URI",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"as2.partnerStationInfo.mdn.mdnURL":{
  "enumValues": [],
  "regExp": null,
  "path": "as2.partnerStationInfo.mdn.mdnURL",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"as2.partnerStationInfo.mdn.signatureProtocol":{
  "enumValues": [
    "pkcs7-signature"
  ],
  "regExp": null,
  "path": "as2.partnerStationInfo.mdn.signatureProtocol",
  "instance": "String",
  "validators": [
    {
      "message": "`{VALUE}` is not a valid enum value for path `{PATH}`.",
      "type": "enum",
      "enumValues": [
        "pkcs7-signature"
      ]
    }
  ],
  "setters": [],
  "getters": [],
  "options": {
    "enum": [
      "pkcs7-signature"
    ],
    "template": true
  },
  "_index": null
},
"as2.partnerStationInfo.mdn.mdnSigning":{
  "enumValues": [
    "NONE",
    "SHA1",
    "MD5",
    "SHA256"
  ],
  "regExp": null,
  "path": "as2.partnerStationInfo.mdn.mdnSigning",
  "instance": "String",
  "validators": [
    {
      "message": "`{VALUE}` is not a valid enum value for path `{PATH}`.",
      "type": "enum",
      "enumValues": [
        "NONE",
        "SHA1",
        "MD5",
        "SHA256"
      ]
    }
  ],
  "setters": [
    null
  ],
  "getters": [],
  "options": {
    "enum": [
      "NONE",
      "SHA1",
      "MD5",
      "SHA256"
    ],
    "uppercase": true,
    "template": true
  },
  "_index": null
},
"as2.partnerStationInfo.auth.type":{
  "enumValues": [
    "basic",
    "token"
  ],
  "regExp": null,
  "path": "as2.partnerStationInfo.auth.type",
  "instance": "String",
  "validators": [
    {
      "message": "`{VALUE}` is not a valid enum value for path `{PATH}`.",
      "type": "enum",
      "enumValues": [
        "basic",
        "token"
      ]
    }
  ],
  "setters": [
    null
  ],
  "getters": [],
  "options": {
    "enum": [
      "basic",
      "token"
    ],
    "lowercase": true,
    "template": true
  },
  "_index": null
},
"as2.partnerStationInfo.auth.failStatusCode":{
  "path": "as2.partnerStationInfo.auth.failStatusCode",
  "instance": "Number",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true,
    "patch": true
  },
  "_index": null
},
"as2.partnerStationInfo.auth.failPath":{
  "enumValues": [],
  "regExp": null,
  "path": "as2.partnerStationInfo.auth.failPath",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true,
    "patch": true
  },
  "_index": null
},
"as2.partnerStationInfo.auth.failValues[*]":{
  "template": true,
  "patch": true,
  "_id": false
},
"as2.partnerStationInfo.auth.basic.username":{
  "enumValues": [],
  "regExp": null,
  "path": "as2.partnerStationInfo.auth.basic.username",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"as2.partnerStationInfo.auth.basic.password_crypt":{
  "enumValues": [],
  "regExp": null,
  "path": "as2.partnerStationInfo.auth.basic.password_crypt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"as2.partnerStationInfo.auth.basic.password_salt":{
  "enumValues": [],
  "regExp": null,
  "path": "as2.partnerStationInfo.auth.basic.password_salt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"as2.partnerStationInfo.auth.token.token_crypt":{
  "enumValues": [],
  "regExp": null,
  "path": "as2.partnerStationInfo.auth.token.token_crypt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "maxSize": 20480
  },
  "_index": null
},
"as2.partnerStationInfo.auth.token.token_salt":{
  "enumValues": [],
  "regExp": null,
  "path": "as2.partnerStationInfo.auth.token.token_salt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"as2.partnerStationInfo.auth.token.location":{
  "enumValues": [
    "url",
    "header",
    "body"
  ],
  "regExp": null,
  "path": "as2.partnerStationInfo.auth.token.location",
  "instance": "String",
  "validators": [
    {
      "message": "`{VALUE}` is not a valid enum value for path `{PATH}`.",
      "type": "enum",
      "enumValues": [
        "url",
        "header",
        "body"
      ]
    }
  ],
  "setters": [],
  "getters": [],
  "options": {
    "enum": [
      "url",
      "header",
      "body"
    ],
    "template": true
  },
  "_index": null
},
"as2.partnerStationInfo.auth.token.headerName":{
  "enumValues": [],
  "regExp": null,
  "path": "as2.partnerStationInfo.auth.token.headerName",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"as2.partnerStationInfo.auth.token.scheme":{
  "enumValues": [],
  "regExp": null,
  "path": "as2.partnerStationInfo.auth.token.scheme",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"as2.partnerStationInfo.auth.token.paramName":{
  "enumValues": [],
  "regExp": null,
  "path": "as2.partnerStationInfo.auth.token.paramName",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"as2.partnerStationInfo.auth.token.refreshMethod":{
  "enumValues": [
    "GET",
    "POST"
  ],
  "regExp": null,
  "path": "as2.partnerStationInfo.auth.token.refreshMethod",
  "instance": "String",
  "validators": [
    {
      "message": "`{VALUE}` is not a valid enum value for path `{PATH}`.",
      "type": "enum",
      "enumValues": [
        "GET",
        "POST"
      ]
    }
  ],
  "setters": [
    null
  ],
  "getters": [],
  "options": {
    "enum": [
      "GET",
      "POST"
    ],
    "uppercase": true,
    "template": true
  },
  "_index": null
},
"as2.partnerStationInfo.auth.token.refreshRelativeURI":{
  "enumValues": [],
  "regExp": null,
  "path": "as2.partnerStationInfo.auth.token.refreshRelativeURI",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"as2.partnerStationInfo.auth.token.refreshBody":{
  "enumValues": [],
  "regExp": null,
  "path": "as2.partnerStationInfo.auth.token.refreshBody",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"as2.partnerStationInfo.auth.token.refreshTokenPath":{
  "enumValues": [],
  "regExp": null,
  "path": "as2.partnerStationInfo.auth.token.refreshTokenPath",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"as2.partnerStationInfo.auth.token.refreshMediaType":{
  "enumValues": [
    "json",
    "urlencoded",
    "xml"
  ],
  "regExp": null,
  "path": "as2.partnerStationInfo.auth.token.refreshMediaType",
  "instance": "String",
  "validators": [
    {
      "message": "`{VALUE}` is not a valid enum value for path `{PATH}`.",
      "type": "enum",
      "enumValues": [
        "json",
        "urlencoded",
        "xml"
      ]
    }
  ],
  "setters": [
    null
  ],
  "getters": [],
  "options": {
    "enum": [
      "json",
      "urlencoded",
      "xml"
    ],
    "lowercase": true,
    "template": true
  },
  "_index": null
},
"as2.partnerStationInfo.auth.token.refreshHeaders[*].name":{
  "template": true
},
"as2.partnerStationInfo.auth.token.refreshHeaders[*].value":{
  "template": true
},
"as2.partnerStationInfo.auth.token.refreshToken_crypt":{
  "enumValues": [],
  "regExp": null,
  "path": "as2.partnerStationInfo.auth.token.refreshToken_crypt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "maxSize": 20480
  },
  "_index": null
},
"as2.partnerStationInfo.auth.token.refreshToken_salt":{
  "enumValues": [],
  "regExp": null,
  "path": "as2.partnerStationInfo.auth.token.refreshToken_salt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"as2.partnerStationInfo.auth._id":{
  "path": "as2.partnerStationInfo.auth._id",
  "instance": "Mixed",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "type": false
  },
  "_index": null
},
"as2.partnerStationInfo.rateLimit.failStatusCode":{
  "path": "as2.partnerStationInfo.rateLimit.failStatusCode",
  "instance": "Number",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true,
    "patch": true
  },
  "_index": null
},
"as2.partnerStationInfo.rateLimit.failPath":{
  "enumValues": [],
  "regExp": null,
  "path": "as2.partnerStationInfo.rateLimit.failPath",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true,
    "patch": true
  },
  "_index": null
},
"as2.partnerStationInfo.rateLimit.failValues[*]":{
  "template": true,
  "patch": true,
  "_id": false
},
"as2.partnerStationInfo.rateLimit.limit":{
  "path": "as2.partnerStationInfo.rateLimit.limit",
  "instance": "Number",
  "validators": [
    {
      "message": "Path `{PATH}` ({VALUE}) is less than minimum allowed value (1).",
      "type": "min",
      "min": 1
    }
  ],
  "setters": [],
  "getters": [],
  "options": {
    "min": 1,
    "template": true,
    "patch": true
  },
  "_index": null
},
"as2.partnerStationInfo.rateLimit._id":{
  "path": "as2.partnerStationInfo.rateLimit._id",
  "instance": "Mixed",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "type": false
  },
  "_index": null
},
"as2.partnerStationInfo.SMIMEVersion":{
  "enumValues": [
    "v2",
    "v3"
  ],
  "regExp": null,
  "path": "as2.partnerStationInfo.SMIMEVersion",
  "instance": "String",
  "validators": [
    {
      "message": "`{VALUE}` is not a valid enum value for path `{PATH}`.",
      "type": "enum",
      "enumValues": [
        "v2",
        "v3"
      ]
    }
  ],
  "setters": [
    null
  ],
  "getters": [],
  "options": {
    "enum": [
      "v2",
      "v3"
    ],
    "lowercase": true
  },
  "_index": null
},
"as2.partnerStationInfo.encryptionType":{
  "enumValues": [
    "NONE",
    "DES",
    "RC2",
    "3DES",
    "AES128",
    "AES256"
  ],
  "regExp": null,
  "path": "as2.partnerStationInfo.encryptionType",
  "instance": "String",
  "validators": [
    {
      "message": "`{VALUE}` is not a valid enum value for path `{PATH}`.",
      "type": "enum",
      "enumValues": [
        "NONE",
        "DES",
        "RC2",
        "3DES",
        "AES128",
        "AES256"
      ]
    }
  ],
  "setters": [
    null
  ],
  "getters": [],
  "options": {
    "enum": [
      "NONE",
      "DES",
      "RC2",
      "3DES",
      "AES128",
      "AES256"
    ],
    "uppercase": true,
    "template": true
  },
  "_index": null
},
"as2.partnerStationInfo.signing":{
  "enumValues": [
    "NONE",
    "SHA1",
    "MD5",
    "SHA256"
  ],
  "regExp": null,
  "path": "as2.partnerStationInfo.signing",
  "instance": "String",
  "validators": [
    {
      "message": "`{VALUE}` is not a valid enum value for path `{PATH}`.",
      "type": "enum",
      "enumValues": [
        "NONE",
        "SHA1",
        "MD5",
        "SHA256"
      ]
    }
  ],
  "setters": [
    null
  ],
  "getters": [],
  "options": {
    "enum": [
      "NONE",
      "SHA1",
      "MD5",
      "SHA256"
    ],
    "uppercase": true,
    "template": true
  },
  "_index": null
},
"as2.partnerStationInfo.encoding":{
  "enumValues": [
    "base64",
    "binary"
  ],
  "regExp": null,
  "path": "as2.partnerStationInfo.encoding",
  "instance": "String",
  "validators": [
    {
      "message": "`{VALUE}` is not a valid enum value for path `{PATH}`.",
      "type": "enum",
      "enumValues": [
        "base64",
        "binary"
      ]
    }
  ],
  "setters": [
    null
  ],
  "getters": [],
  "options": {
    "enum": [
      "base64",
      "binary"
    ],
    "lowercase": true,
    "template": true
  },
  "_index": null
},
"as2.userStationInfo.mdn.mdnURL":{
  "enumValues": [],
  "regExp": null,
  "path": "as2.userStationInfo.mdn.mdnURL",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"as2.userStationInfo.mdn.signatureProtocol":{
  "enumValues": [
    "pkcs7-signature"
  ],
  "regExp": null,
  "path": "as2.userStationInfo.mdn.signatureProtocol",
  "instance": "String",
  "validators": [
    {
      "message": "`{VALUE}` is not a valid enum value for path `{PATH}`.",
      "type": "enum",
      "enumValues": [
        "pkcs7-signature"
      ]
    }
  ],
  "setters": [],
  "getters": [],
  "options": {
    "enum": [
      "pkcs7-signature"
    ],
    "template": true
  },
  "_index": null
},
"as2.userStationInfo.mdn.mdnSigning":{
  "enumValues": [
    "NONE",
    "SHA1",
    "MD5",
    "SHA256"
  ],
  "regExp": null,
  "path": "as2.userStationInfo.mdn.mdnSigning",
  "instance": "String",
  "validators": [
    {
      "message": "`{VALUE}` is not a valid enum value for path `{PATH}`.",
      "type": "enum",
      "enumValues": [
        "NONE",
        "SHA1",
        "MD5",
        "SHA256"
      ]
    }
  ],
  "setters": [
    null
  ],
  "getters": [],
  "options": {
    "enum": [
      "NONE",
      "SHA1",
      "MD5",
      "SHA256"
    ],
    "uppercase": true,
    "template": true
  },
  "_index": null
},
"as2.userStationInfo.encryptionType":{
  "enumValues": [
    "NONE",
    "DES",
    "RC2",
    "3DES",
    "AES128",
    "AES256"
  ],
  "regExp": null,
  "path": "as2.userStationInfo.encryptionType",
  "instance": "String",
  "validators": [
    {
      "message": "`{VALUE}` is not a valid enum value for path `{PATH}`.",
      "type": "enum",
      "enumValues": [
        "NONE",
        "DES",
        "RC2",
        "3DES",
        "AES128",
        "AES256"
      ]
    }
  ],
  "setters": [
    null
  ],
  "getters": [],
  "options": {
    "enum": [
      "NONE",
      "DES",
      "RC2",
      "3DES",
      "AES128",
      "AES256"
    ],
    "uppercase": true,
    "template": true
  },
  "_index": null
},
"as2.userStationInfo.signing":{
  "enumValues": [
    "NONE",
    "SHA1",
    "MD5",
    "SHA256"
  ],
  "regExp": null,
  "path": "as2.userStationInfo.signing",
  "instance": "String",
  "validators": [
    {
      "message": "`{VALUE}` is not a valid enum value for path `{PATH}`.",
      "type": "enum",
      "enumValues": [
        "NONE",
        "SHA1",
        "MD5",
        "SHA256"
      ]
    }
  ],
  "setters": [
    null
  ],
  "getters": [],
  "options": {
    "enum": [
      "NONE",
      "SHA1",
      "MD5",
      "SHA256"
    ],
    "uppercase": true,
    "template": true
  },
  "_index": null
},
"as2.userStationInfo.encoding":{
  "enumValues": [
    "base64",
    "binary"
  ],
  "regExp": null,
  "path": "as2.userStationInfo.encoding",
  "instance": "String",
  "validators": [
    {
      "message": "`{VALUE}` is not a valid enum value for path `{PATH}`.",
      "type": "enum",
      "enumValues": [
        "base64",
        "binary"
      ]
    }
  ],
  "setters": [
    null
  ],
  "getters": [],
  "options": {
    "enum": [
      "base64",
      "binary"
    ],
    "lowercase": true,
    "template": true
  },
  "_index": null
},
"as2.encrypted_crypt":{
  "enumValues": [],
  "regExp": null,
  "path": "as2.encrypted_crypt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "maxSize": 20480
  },
  "_index": null
},
"as2.encrypted_salt":{
  "enumValues": [],
  "regExp": null,
  "path": "as2.encrypted_salt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"as2.concurrencyLevel":{
  "path": "as2.concurrencyLevel",
  "instance": "Number",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"as2.unencrypted":{
  "path": "as2.unencrypted",
  "instance": "Mixed",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"as2.encryptedFields[*].id":{},
"as2.encryptedFields[*].label":{},
"as2.encryptedFields[*].required":{
  "default": false
},
"as2.encryptedFields[*].position":{},
"as2.encryptedFields[*].helpText":{},
"netsuite.account":{
  "enumValues": [],
  "regExp": null,
  "path": "netsuite.account",
  "instance": "String",
  "validators": [],
  "setters": [
    null
  ],
  "getters": [],
  "options": {
    "uppercase": true
  },
  "_index": null
},
"netsuite.tokenId_crypt":{
  "enumValues": [],
  "regExp": null,
  "path": "netsuite.tokenId_crypt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"netsuite.tokenId_salt":{
  "enumValues": [],
  "regExp": null,
  "path": "netsuite.tokenId_salt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"netsuite.tokenSecret_crypt":{
  "enumValues": [],
  "regExp": null,
  "path": "netsuite.tokenSecret_crypt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"netsuite.tokenSecret_salt":{
  "enumValues": [],
  "regExp": null,
  "path": "netsuite.tokenSecret_salt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"netsuite.environment":{
  "enumValues": [
    "production",
    "sandbox",
    "beta",
    "sandbox2.0"
  ],
  "regExp": null,
  "path": "netsuite.environment",
  "instance": "String",
  "validators": [
    {
      "message": "`{VALUE}` is not a valid enum value for path `{PATH}`.",
      "type": "enum",
      "enumValues": [
        "production",
        "sandbox",
        "beta",
        "sandbox2.0"
      ]
    }
  ],
  "setters": [
    null
  ],
  "getters": [],
  "options": {
    "enum": [
      "production",
      "sandbox",
      "beta",
      "sandbox2.0"
    ],
    "lowercase": true
  },
  "_index": null
},
"netsuite.roleId":{
  "enumValues": [],
  "regExp": null,
  "path": "netsuite.roleId",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"netsuite.email":{
  "enumValues": [],
  "regExp": null,
  "path": "netsuite.email",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"netsuite.password_crypt":{
  "enumValues": [],
  "regExp": null,
  "path": "netsuite.password_crypt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"netsuite.password_salt":{
  "enumValues": [],
  "regExp": null,
  "path": "netsuite.password_salt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"netsuite.requestLevelCredentials":{
  "path": "netsuite.requestLevelCredentials",
  "instance": "Boolean",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"netsuite.dataCenterURLs":{
  "path": "netsuite.dataCenterURLs",
  "instance": "Mixed",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"netsuite.accountName":{
  "enumValues": [],
  "regExp": null,
  "path": "netsuite.accountName",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"netsuite.roleName":{
  "enumValues": [],
  "regExp": null,
  "path": "netsuite.roleName",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"netsuite.concurrencyLevelRESTlet":{
  "path": "netsuite.concurrencyLevelRESTlet",
  "instance": "Number",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"netsuite.concurrencyLevelWebServices":{
  "path": "netsuite.concurrencyLevelWebServices",
  "instance": "Number",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"netsuite.concurrencyLevel":{
  "path": "netsuite.concurrencyLevel",
  "instance": "Number",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"netsuite.wsdlVersion":{
  "enumValues": [
    "current",
    "next"
  ],
  "regExp": null,
  "path": "netsuite.wsdlVersion",
  "instance": "String",
  "validators": [
    {
      "message": "`{VALUE}` is not a valid enum value for path `{PATH}`.",
      "type": "enum",
      "enumValues": [
        "current",
        "next"
      ]
    }
  ],
  "setters": [
    null
  ],
  "getters": [],
  "options": {
    "enum": [
      "current",
      "next"
    ],
    "lowercase": true,
    "template": true
  },
  "_index": null
},
"netsuite.applicationId":{
  "enumValues": [],
  "regExp": null,
  "path": "netsuite.applicationId",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"netsuite._iClientId":{
  "path": "netsuite._iClientId",
  "instance": "ObjectID",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "ref": "IClient"
  },
  "_index": null
},
"netSuiteDistributedAdaptor.accountId":{
  "enumValues": [],
  "regExp": null,
  "path": "netSuiteDistributedAdaptor.accountId",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"netSuiteDistributedAdaptor.environment":{
  "enumValues": [
    "production",
    "sandbox",
    "beta",
    "sandbox2.0"
  ],
  "regExp": null,
  "path": "netSuiteDistributedAdaptor.environment",
  "instance": "String",
  "validators": [
    {
      "message": "`{VALUE}` is not a valid enum value for path `{PATH}`.",
      "type": "enum",
      "enumValues": [
        "production",
        "sandbox",
        "beta",
        "sandbox2.0"
      ]
    }
  ],
  "setters": [
    null
  ],
  "getters": [],
  "options": {
    "enum": [
      "production",
      "sandbox",
      "beta",
      "sandbox2.0"
    ],
    "lowercase": true
  },
  "_index": null
},
"netSuiteDistributedAdaptor.connectionId":{
  "enumValues": [],
  "regExp": null,
  "path": "netSuiteDistributedAdaptor.connectionId",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"netSuiteDistributedAdaptor.username":{
  "enumValues": [],
  "regExp": null,
  "path": "netSuiteDistributedAdaptor.username",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"netSuiteDistributedAdaptor.uri":{
  "enumValues": [],
  "regExp": null,
  "path": "netSuiteDistributedAdaptor.uri",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"salesforce.sandbox":{
  "path": "salesforce.sandbox",
  "instance": "Boolean",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"salesforce.baseURI":{
  "enumValues": [],
  "regExp": null,
  "path": "salesforce.baseURI",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"salesforce.oauth2FlowType":{
  "enumValues": [
    "jwtBearerToken",
    "refreshToken"
  ],
  "regExp": null,
  "path": "salesforce.oauth2FlowType",
  "instance": "String",
  "validators": [
    {
      "message": "`{VALUE}` is not a valid enum value for path `{PATH}`.",
      "type": "enum",
      "enumValues": [
        "jwtBearerToken",
        "refreshToken"
      ]
    }
  ],
  "setters": [],
  "getters": [],
  "options": {
    "enum": [
      "jwtBearerToken",
      "refreshToken"
    ]
  },
  "_index": null
},
"salesforce.username":{
  "enumValues": [],
  "regExp": null,
  "path": "salesforce.username",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"salesforce.bearerToken_crypt":{
  "enumValues": [],
  "regExp": null,
  "path": "salesforce.bearerToken_crypt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"salesforce.bearerToken_salt":{
  "enumValues": [],
  "regExp": null,
  "path": "salesforce.bearerToken_salt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"salesforce.refreshToken_crypt":{
  "enumValues": [],
  "regExp": null,
  "path": "salesforce.refreshToken_crypt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"salesforce.refreshToken_salt":{
  "enumValues": [],
  "regExp": null,
  "path": "salesforce.refreshToken_salt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"salesforce.packagedOAuth":{
  "path": "salesforce.packagedOAuth",
  "instance": "Boolean",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"salesforce.scope[*]":{
  "type": [
    null
  ],
  "cLocked": true,
  "template": true
},
"salesforce._iClientId":{
  "path": "salesforce._iClientId",
  "instance": "ObjectID",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "ref": "IClient"
  },
  "_index": null
},
"salesforce.info":{
  "path": "salesforce.info",
  "instance": "Mixed",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"salesforce.concurrencyLevel":{
  "path": "salesforce.concurrencyLevel",
  "instance": "Number",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"wrapper.unencrypted":{
  "path": "wrapper.unencrypted",
  "instance": "Mixed",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"wrapper.unencryptedFields[*].id":{},
"wrapper.unencryptedFields[*].label":{},
"wrapper.unencryptedFields[*].required":{
  "default": false
},
"wrapper.unencryptedFields[*].position":{},
"wrapper.unencryptedFields[*].helpText":{},
"wrapper.unencryptedFields[*].type":{},
"wrapper.encrypted_crypt":{
  "enumValues": [],
  "regExp": null,
  "path": "wrapper.encrypted_crypt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "maxSize": 30720
  },
  "_index": null
},
"wrapper.encrypted_salt":{
  "enumValues": [],
  "regExp": null,
  "path": "wrapper.encrypted_salt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"wrapper.encryptedFields[*].id":{},
"wrapper.encryptedFields[*].label":{},
"wrapper.encryptedFields[*].required":{
  "default": false
},
"wrapper.encryptedFields[*].position":{},
"wrapper.encryptedFields[*].helpText":{},
"wrapper.encryptedFields[*].type":{},
"wrapper.pingFunction":{
  "enumValues": [],
  "regExp": null,
  "path": "wrapper.pingFunction",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "cLocked": true,
    "template": true
  },
  "_index": null
},
"wrapper._stackId":{
  "path": "wrapper._stackId",
  "instance": "ObjectID",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "ref": "Stack",
    "cLocked": true
  },
  "_index": null
},
"wrapper.concurrencyLevel":{
  "path": "wrapper.concurrencyLevel",
  "instance": "Number",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {
    "template": true
  },
  "_index": null
},
"mongodb.host[*]":{},
"mongodb.database":{
  "enumValues": [],
  "regExp": null,
  "path": "mongodb.database",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"mongodb.username":{
  "enumValues": [],
  "regExp": null,
  "path": "mongodb.username",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"mongodb.password_crypt":{
  "enumValues": [],
  "regExp": null,
  "path": "mongodb.password_crypt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"mongodb.password_salt":{
  "enumValues": [],
  "regExp": null,
  "path": "mongodb.password_salt",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"mongodb.replicaSet":{
  "enumValues": [],
  "regExp": null,
  "path": "mongodb.replicaSet",
  "instance": "String",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
},
"__v":{
  "path": "__v",
  "instance": "Number",
  "validators": [],
  "setters": [],
  "getters": [],
  "options": {},
  "_index": null
}
}
