{  
   "_userId":{  
      "path":"_userId",
      "instance":"ObjectID",
      "validators":[  
         {  
            "message":"Path `{PATH}` is required.",
            "type":"required"
         }
      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "required":true,
         "ref":"User",
         "template":false
      },
      "_index":null,
      "isRequired":true,
      "originalRequiredValue":true
   },
   "name":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"name",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "maxSize":200
      },
      "_index":null
   },
   "description":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"description",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "maxSize":10240
      },
      "_index":null
   },
   "createdAt":{  
      "path":"createdAt",
      "instance":"Date",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "lastModified":{  
      "path":"lastModified",
      "instance":"Date",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "index":true,
         "template":false
      },
      "_index":true
   },
   "_connectionId":{  
      "path":"_connectionId",
      "instance":"ObjectID",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "ref":"Connection"
      },
      "_index":null
   },
   "asynchronous":{  
      "path":"asynchronous",
      "instance":"Boolean",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "default":false
      },
      "_index":null,
      "defaultValue":false
   },
   "apiIdentifier":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"apiIdentifier",
      "instance":"String",
      "validators":[  
         {  
            "message":"Path `{PATH}` is required.",
            "type":"required"
         }
      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "required":true,
         "template":false
      },
      "_index":null,
      "isRequired":true,
      "originalRequiredValue":true
   },
   "_integrationId":{  
      "path":"_integrationId",
      "instance":"ObjectID",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "ref":"Integration",
         "template":false
      },
      "_index":null
   },
   "_connectorId":{  
      "path":"_connectorId",
      "instance":"ObjectID",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "ref":"Connector",
         "template":false
      },
      "_index":null
   },
   "externalId":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"externalId",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "template":false
      },
      "_index":null
   },
   "type":{  
      "enumValues":[  
         "webhook",
         "distributed",
         "test",
         "delta",
         "once",
         "tranlinedelta",
         "simple",
         "blob"
      ],
      "regExp":null,
      "path":"type",
      "instance":"String",
      "validators":[  
         {  
            "message":"`{VALUE}` is not a valid enum value for path `{PATH}`.",
            "type":"enum",
            "enumValues":[  
               "webhook",
               "distributed",
               "test",
               "delta",
               "once",
               "tranlinedelta",
               "simple",
               "blob"
            ]
         }
      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "enum":[  
            "webhook",
            "distributed",
            "test",
            "delta",
            "once",
            "tranlinedelta",
            "simple",
            "blob"
         ]
      },
      "_index":null
   },
   "pageSize":{  
      "path":"pageSize",
      "instance":"Number",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "dataURITemplate":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"dataURITemplate",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "oneToMany":{  
      "path":"oneToMany",
      "instance":"Boolean",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "pathToMany":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"pathToMany",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "sampleData":{  
      "path":"sampleData",
      "instance":"Mixed",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "cLocked":false
      },
      "_index":null
   },
   "originSampleData":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"originSampleData",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "assistant":{  
      "enumValues":[  
         "3dcart",
         "accelo",
         "adp",
         "amazonaws",
         "amazonmws",
         "anaplan",
         "ariba",
         "asana",
         "atera",
         "authorize.net",
         "avalara",
         "banking",
         "bigcommerce",
         "bill.com",
         "box",
         "braintree",
         "campaignmonitor",
         "certify",
         "chargebee",
         "chargify",
         "clover",
         "dcl",
         "desk",
         "dnb",
         "docusign",
         "doubleclick",
         "dropbox",
         "ebay",
         "ebay-xml",
         "eloquent",
         "etsy",
         "eventbrite",
         "exacterp",
         "expensify",
         "facebookads",
         "fieldaware",
         "freshbooks",
         "freshdesk",
         "ftp",
         "github",
         "gooddata",
         "google",
         "googleanalytics",
         "googlecontacts",
         "googledrive",
         "googlemail",
         "googlesheets",
         "googleshopping",
         "harvest",
         "hoovers",
         "hubspot",
         "hybris",
         "insightly",
         "integratorio",
         "jet",
         "jira",
         "jobvite",
         "lightspeed",
         "linkedin",
         "liquidplanner",
         "magento",
         "mailchimp",
         "mediaocean",
         "namely",
         "netsuite",
         "newegg",
         "newrelic",
         "okta",
         "openair",
         "osn",
         "other",
         "paychex",
         "paylocity",
         "paypal",
         "pulseway",
         "quickbooks",
         "recurly",
         "replicon",
         "s3",
         "sageone",
         "salesforce",
         "servicenow",
         "shiphawk",
         "shipstation",
         "shipwire",
         "shopify",
         "skubana",
         "slack",
         "smartsheet",
         "snapfulfil",
         "splunk",
         "spreecommerce",
         "squareup",
         "steelbrick",
         "stripe",
         "surveymonkey",
         "svb",
         "tableau",
         "tesco",
         "travis",
         "tsheets",
         "twilio",
         "walmart",
         "wiser",
         "woocommerce",
         "wrike",
         "xcart",
         "yahoo",
         "yammer",
         "zendesk",
         "zoho",
         "zuora",
         "coupa",
         "taxjar",
         "quip",
         "allbound",
         "zohocrm",
         "zohodesk",
         "microsoftoffice365",
         "microsoftdynamics365",
         "pitneybowes",
         "mysql",
         "postgresql",
         "mssql",
         "greenhouse",
         "shippo",
         "gusto",
         "easypost",
         "segment",
         "zohobooks",
         "microsoftbusinesscentral",
         "microsoftoutlookcalendar",
         "microsoftoutlookmail",
         "microsoftoutlookcontacts",
         "microsoftonenote",
         "wish",
         "pdffiller",
         "signnow",
         "acton",
         "acumatica",
         "mongodb",
         "zohomail",
         "zoom",
         "myobessentials",
         "nimble",
         "bronto",
         "strata",
         "returnly",
         "activecampaign",
         "klaviyo",
         "postmark",
         "powerbi",
         "procurify",
         "mailgun",
         "zimbra",
         "merchantesolutions",
         "aptrinsic",
         "cardknox",
         "skuvault",
         "nextag",
         "concur",
         "oandav20fxtrade",
         "oandaexchangerates",
         "spreecommerce",
         "tophatter",
         "concurv4",
         "sugarcrm",
         "marketo",
         "grms",
         "retailops",
         "sharepoint",
         "parseur",
         "authorize.net",
         "firstdata",
         "propack",
         "outreach",
         "ramplogistics",
         "constantcontactv3",
         "constantcontactv2",
         "concurall",
         "dunandbradstreet",
         "trinet",
         "pacejet",
         "solidcommerce",
         "intercom",
         "bamboohr"
      ],
      "regExp":null,
      "path":"assistant",
      "instance":"String",
      "validators":[  
         {  
            "message":"`{VALUE}` is not a valid enum value for path `{PATH}`.",
            "type":"enum",
            "enumValues":[  
               "3dcart",
               "accelo",
               "adp",
               "amazonaws",
               "amazonmws",
               "anaplan",
               "ariba",
               "asana",
               "atera",
               "authorize.net",
               "avalara",
               "banking",
               "bigcommerce",
               "bill.com",
               "box",
               "braintree",
               "campaignmonitor",
               "certify",
               "chargebee",
               "chargify",
               "clover",
               "dcl",
               "desk",
               "dnb",
               "docusign",
               "doubleclick",
               "dropbox",
               "ebay",
               "ebay-xml",
               "eloquent",
               "etsy",
               "eventbrite",
               "exacterp",
               "expensify",
               "facebookads",
               "fieldaware",
               "freshbooks",
               "freshdesk",
               "ftp",
               "github",
               "gooddata",
               "google",
               "googleanalytics",
               "googlecontacts",
               "googledrive",
               "googlemail",
               "googlesheets",
               "googleshopping",
               "harvest",
               "hoovers",
               "hubspot",
               "hybris",
               "insightly",
               "integratorio",
               "jet",
               "jira",
               "jobvite",
               "lightspeed",
               "linkedin",
               "liquidplanner",
               "magento",
               "mailchimp",
               "mediaocean",
               "namely",
               "netsuite",
               "newegg",
               "newrelic",
               "okta",
               "openair",
               "osn",
               "other",
               "paychex",
               "paylocity",
               "paypal",
               "pulseway",
               "quickbooks",
               "recurly",
               "replicon",
               "s3",
               "sageone",
               "salesforce",
               "servicenow",
               "shiphawk",
               "shipstation",
               "shipwire",
               "shopify",
               "skubana",
               "slack",
               "smartsheet",
               "snapfulfil",
               "splunk",
               "spreecommerce",
               "squareup",
               "steelbrick",
               "stripe",
               "surveymonkey",
               "svb",
               "tableau",
               "tesco",
               "travis",
               "tsheets",
               "twilio",
               "walmart",
               "wiser",
               "woocommerce",
               "wrike",
               "xcart",
               "yahoo",
               "yammer",
               "zendesk",
               "zoho",
               "zuora",
               "coupa",
               "taxjar",
               "quip",
               "allbound",
               "zohocrm",
               "zohodesk",
               "microsoftoffice365",
               "microsoftdynamics365",
               "pitneybowes",
               "mysql",
               "postgresql",
               "mssql",
               "greenhouse",
               "shippo",
               "gusto",
               "easypost",
               "segment",
               "zohobooks",
               "microsoftbusinesscentral",
               "microsoftoutlookcalendar",
               "microsoftoutlookmail",
               "microsoftoutlookcontacts",
               "microsoftonenote",
               "wish",
               "pdffiller",
               "signnow",
               "acton",
               "acumatica",
               "mongodb",
               "zohomail",
               "zoom",
               "myobessentials",
               "nimble",
               "bronto",
               "strata",
               "returnly",
               "activecampaign",
               "klaviyo",
               "postmark",
               "powerbi",
               "procurify",
               "mailgun",
               "zimbra",
               "merchantesolutions",
               "aptrinsic",
               "cardknox",
               "skuvault",
               "nextag",
               "concur",
               "oandav20fxtrade",
               "oandaexchangerates",
               "spreecommerce",
               "tophatter",
               "concurv4",
               "sugarcrm",
               "marketo",
               "grms",
               "retailops",
               "sharepoint",
               "parseur",
               "authorize.net",
               "firstdata",
               "propack",
               "outreach",
               "ramplogistics",
               "constantcontactv3",
               "constantcontactv2",
               "concurall",
               "dunandbradstreet",
               "trinet",
               "pacejet",
               "solidcommerce",
               "intercom",
               "bamboohr"
            ]
         }
      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "enum":[  
            "3dcart",
            "accelo",
            "adp",
            "amazonaws",
            "amazonmws",
            "anaplan",
            "ariba",
            "asana",
            "atera",
            "authorize.net",
            "avalara",
            "banking",
            "bigcommerce",
            "bill.com",
            "box",
            "braintree",
            "campaignmonitor",
            "certify",
            "chargebee",
            "chargify",
            "clover",
            "dcl",
            "desk",
            "dnb",
            "docusign",
            "doubleclick",
            "dropbox",
            "ebay",
            "ebay-xml",
            "eloquent",
            "etsy",
            "eventbrite",
            "exacterp",
            "expensify",
            "facebookads",
            "fieldaware",
            "freshbooks",
            "freshdesk",
            "ftp",
            "github",
            "gooddata",
            "google",
            "googleanalytics",
            "googlecontacts",
            "googledrive",
            "googlemail",
            "googlesheets",
            "googleshopping",
            "harvest",
            "hoovers",
            "hubspot",
            "hybris",
            "insightly",
            "integratorio",
            "jet",
            "jira",
            "jobvite",
            "lightspeed",
            "linkedin",
            "liquidplanner",
            "magento",
            "mailchimp",
            "mediaocean",
            "namely",
            "netsuite",
            "newegg",
            "newrelic",
            "okta",
            "openair",
            "osn",
            "other",
            "paychex",
            "paylocity",
            "paypal",
            "pulseway",
            "quickbooks",
            "recurly",
            "replicon",
            "s3",
            "sageone",
            "salesforce",
            "servicenow",
            "shiphawk",
            "shipstation",
            "shipwire",
            "shopify",
            "skubana",
            "slack",
            "smartsheet",
            "snapfulfil",
            "splunk",
            "spreecommerce",
            "squareup",
            "steelbrick",
            "stripe",
            "surveymonkey",
            "svb",
            "tableau",
            "tesco",
            "travis",
            "tsheets",
            "twilio",
            "walmart",
            "wiser",
            "woocommerce",
            "wrike",
            "xcart",
            "yahoo",
            "yammer",
            "zendesk",
            "zoho",
            "zuora",
            "coupa",
            "taxjar",
            "quip",
            "allbound",
            "zohocrm",
            "zohodesk",
            "microsoftoffice365",
            "microsoftdynamics365",
            "pitneybowes",
            "mysql",
            "postgresql",
            "mssql",
            "greenhouse",
            "shippo",
            "gusto",
            "easypost",
            "segment",
            "zohobooks",
            "microsoftbusinesscentral",
            "microsoftoutlookcalendar",
            "microsoftoutlookmail",
            "microsoftoutlookcontacts",
            "microsoftonenote",
            "wish",
            "pdffiller",
            "signnow",
            "acton",
            "acumatica",
            "mongodb",
            "zohomail",
            "zoom",
            "myobessentials",
            "nimble",
            "bronto",
            "strata",
            "returnly",
            "activecampaign",
            "klaviyo",
            "postmark",
            "powerbi",
            "procurify",
            "mailgun",
            "zimbra",
            "merchantesolutions",
            "aptrinsic",
            "cardknox",
            "skuvault",
            "nextag",
            "concur",
            "oandav20fxtrade",
            "oandaexchangerates",
            "spreecommerce",
            "tophatter",
            "concurv4",
            "sugarcrm",
            "marketo",
            "grms",
            "retailops",
            "sharepoint",
            "parseur",
            "authorize.net",
            "firstdata",
            "propack",
            "outreach",
            "ramplogistics",
            "constantcontactv3",
            "constantcontactv2",
            "concurall",
            "dunandbradstreet",
            "trinet",
            "pacejet",
            "solidcommerce",
            "intercom",
            "bamboohr"
         ]
      },
      "_index":null
   },
   "sandbox":{  
      "path":"sandbox",
      "instance":"Boolean",
      "validators":[  

      ],
      "setters":[  
         null
      ],
      "getters":[  

      ],
      "options":{  
         "template":false
      },
      "_index":null
   },
   "_templateId":{  
      "path":"_templateId",
      "instance":"ObjectID",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "ref":"Template",
         "template":false
      },
      "_index":null
   },
   "assistantMetadata":{  
      "path":"assistantMetadata",
      "instance":"Mixed",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "cLocked":false,
         "patch":true
      },
      "_index":null
   },
   "deletedAt":{  
      "path":"deletedAt",
      "instance":"Date",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "isLookup":{  
      "path":"isLookup",
      "instance":"Boolean",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "template":true
      },
      "_index":null
   },
   "inputFilter.type":{  
      "enumValues":[  
         "expression",
         "script"
      ],
      "regExp":null,
      "path":"inputFilter.type",
      "instance":"String",
      "validators":[  
         {  
            "message":"`{VALUE}` is not a valid enum value for path `{PATH}`.",
            "type":"enum",
            "enumValues":[  
               "expression",
               "script"
            ]
         }
      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "enum":[  
            "expression",
            "script"
         ]
      },
      "_index":null
   },
   "inputFilter.expression.version":{  
      "enumValues":[  
         "1"
      ],
      "regExp":null,
      "path":"inputFilter.expression.version",
      "instance":"String",
      "validators":[  
         {  
            "message":"`{VALUE}` is not a valid enum value for path `{PATH}`.",
            "type":"enum",
            "enumValues":[  
               "1"
            ]
         }
      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "enum":[  
            "1"
         ]
      },
      "_index":null
   },
   "inputFilter.expression.rules":{  
      "path":"inputFilter.expression.rules",
      "instance":"Mixed",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "inputFilter.script._scriptId":{  
      "path":"inputFilter.script._scriptId",
      "instance":"ObjectID",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "ref":"Script"
      },
      "_index":null
   },
   "inputFilter.script.function":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"inputFilter.script.function",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "useTechAdaptorForm":{  
      "path":"useTechAdaptorForm",
      "instance":"Boolean",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "test.limit":{  
      "path":"test.limit",
      "instance":"Number",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "delta.dateField":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"delta.dateField",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "delta.dateFormat":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"delta.dateFormat",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "delta.startDate":{  
      "path":"delta.startDate",
      "instance":"Date",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "delta.lagOffset":{  
      "path":"delta.lagOffset",
      "instance":"Number",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "delta.endDateField":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"delta.endDateField",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "once.booleanField":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"once.booleanField",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "valueDelta.exportedField":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"valueDelta.exportedField",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "valueDelta.pendingField":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"valueDelta.pendingField",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "webhook.provider":{  
      "enumValues":[  
         "github",
         "shopify",
         "travis",
         "travis-org",
         "slack",
         "dropbox",
         "helpscout",
         "errorception",
         "box",
         "stripe",
         "aha",
         "jira",
         "pagerduty",
         "postmark",
         "mailchimp",
         "intercom",
         "activecampaign",
         "segment",
         "recurly",
         "shipwire",
         "surveymonkey",
         "parseur",
         "mailparser-io",
         "integrator-extension",
         "custom"
      ],
      "regExp":null,
      "path":"webhook.provider",
      "instance":"String",
      "validators":[  
         {  
            "message":"`{VALUE}` is not a valid enum value for path `{PATH}`.",
            "type":"enum",
            "enumValues":[  
               "github",
               "shopify",
               "travis",
               "travis-org",
               "slack",
               "dropbox",
               "helpscout",
               "errorception",
               "box",
               "stripe",
               "aha",
               "jira",
               "pagerduty",
               "postmark",
               "mailchimp",
               "intercom",
               "activecampaign",
               "segment",
               "recurly",
               "shipwire",
               "surveymonkey",
               "parseur",
               "mailparser-io",
               "integrator-extension",
               "custom"
            ]
         }
      ],
      "setters":[  
         null
      ],
      "getters":[  

      ],
      "options":{  
         "lowercase":true,
         "enum":[  
            "github",
            "shopify",
            "travis",
            "travis-org",
            "slack",
            "dropbox",
            "helpscout",
            "errorception",
            "box",
            "stripe",
            "aha",
            "jira",
            "pagerduty",
            "postmark",
            "mailchimp",
            "intercom",
            "activecampaign",
            "segment",
            "recurly",
            "shipwire",
            "surveymonkey",
            "parseur",
            "mailparser-io",
            "integrator-extension",
            "custom"
         ]
      },
      "_index":null
   },
   "webhook.verify":{  
      "enumValues":[  
         "token",
         "hmac",
         "basic",
         "publickey",
         "secret_url"
      ],
      "regExp":null,
      "path":"webhook.verify",
      "instance":"String",
      "validators":[  
         {  
            "message":"`{VALUE}` is not a valid enum value for path `{PATH}`.",
            "type":"enum",
            "enumValues":[  
               "token",
               "hmac",
               "basic",
               "publickey",
               "secret_url"
            ]
         }
      ],
      "setters":[  
         null
      ],
      "getters":[  

      ],
      "options":{  
         "enum":[  
            "token",
            "hmac",
            "basic",
            "publickey",
            "secret_url"
         ],
         "lowercase":true
      },
      "_index":null
   },
   "webhook.token_crypt":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"webhook.token_crypt",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "template":false,
         "cLocked":false
      },
      "_index":null
   },
   "webhook.token_salt":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"webhook.token_salt",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "template":false,
         "cLocked":false
      },
      "_index":null
   },
   "webhook.path":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"webhook.path",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "webhook.algorithm":{  
      "enumValues":[  
         "sha1",
         "sha256"
      ],
      "regExp":null,
      "path":"webhook.algorithm",
      "instance":"String",
      "validators":[  
         {  
            "message":"`{VALUE}` is not a valid enum value for path `{PATH}`.",
            "type":"enum",
            "enumValues":[  
               "sha1",
               "sha256"
            ]
         }
      ],
      "setters":[  
         null
      ],
      "getters":[  

      ],
      "options":{  
         "enum":[  
            "sha1",
            "sha256"
         ],
         "lowercase":true
      },
      "_index":null
   },
   "webhook.encoding":{  
      "enumValues":[  
         "hex",
         "base64"
      ],
      "regExp":null,
      "path":"webhook.encoding",
      "instance":"String",
      "validators":[  
         {  
            "message":"`{VALUE}` is not a valid enum value for path `{PATH}`.",
            "type":"enum",
            "enumValues":[  
               "hex",
               "base64"
            ]
         }
      ],
      "setters":[  
         null
      ],
      "getters":[  

      ],
      "options":{  
         "enum":[  
            "hex",
            "base64"
         ],
         "lowercase":true
      },
      "_index":null
   },
   "webhook.key_crypt":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"webhook.key_crypt",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "template":false,
         "cLocked":false
      },
      "_index":null
   },
   "webhook.key_salt":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"webhook.key_salt",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "template":false,
         "cLocked":false
      },
      "_index":null
   },
   "webhook.header":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"webhook.header",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "webhook.username":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"webhook.username",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "cLocked":false
      },
      "_index":null
   },
   "webhook.password_crypt":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"webhook.password_crypt",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "template":false,
         "cLocked":false
      },
      "_index":null
   },
   "webhook.password_salt":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"webhook.password_salt",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "template":false,
         "cLocked":false
      },
      "_index":null
   },
   "distributed.bearerToken_crypt":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"distributed.bearerToken_crypt",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "template":false
      },
      "_index":null
   },
   "distributed.bearerToken_salt":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"distributed.bearerToken_salt",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "template":false
      },
      "_index":null
   },
   "hooks.preSavePage.function":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"hooks.preSavePage.function",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "hooks.preSavePage._scriptId":{  
      "path":"hooks.preSavePage._scriptId",
      "instance":"ObjectID",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "ref":"Script"
      },
      "_index":null
   },
   "hooks.preSavePage._stackId":{  
      "path":"hooks.preSavePage._stackId",
      "instance":"ObjectID",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "ref":"Stack",
         "template":false
      },
      "_index":null
   },
   "hooks.preSavePage.configuration":{  
      "path":"hooks.preSavePage.configuration",
      "instance":"Mixed",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "transform.type":{  
      "enumValues":[  
         "expression",
         "script"
      ],
      "regExp":null,
      "path":"transform.type",
      "instance":"String",
      "validators":[  
         {  
            "message":"`{VALUE}` is not a valid enum value for path `{PATH}`.",
            "type":"enum",
            "enumValues":[  
               "expression",
               "script"
            ]
         }
      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "enum":[  
            "expression",
            "script"
         ]
      },
      "_index":null
   },
   "transform.expression.version":{  
      "enumValues":[  
         "1"
      ],
      "regExp":null,
      "path":"transform.expression.version",
      "instance":"String",
      "validators":[  
         {  
            "message":"`{VALUE}` is not a valid enum value for path `{PATH}`.",
            "type":"enum",
            "enumValues":[  
               "1"
            ]
         }
      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "enum":[  
            "1"
         ]
      },
      "_index":null
   },
   "transform.expression.rules":{  
      "path":"transform.expression.rules",
      "instance":"Mixed",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "transform.script._scriptId":{  
      "path":"transform.script._scriptId",
      "instance":"ObjectID",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "ref":"Script"
      },
      "_index":null
   },
   "transform.script.function":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"transform.script.function",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "parsers[*].version":{  
      "enum":[  
         "1"
      ]
   },
   "parsers[*].type":{  
      "enum":[  
         "xml"
      ]
   },
   "parsers[*].rules":{  
      "instance":"Mixed",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "_index":null
   },
   "filter.type":{  
      "enumValues":[  
         "expression",
         "script"
      ],
      "regExp":null,
      "path":"filter.type",
      "instance":"String",
      "validators":[  
         {  
            "message":"`{VALUE}` is not a valid enum value for path `{PATH}`.",
            "type":"enum",
            "enumValues":[  
               "expression",
               "script"
            ]
         }
      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "enum":[  
            "expression",
            "script"
         ]
      },
      "_index":null
   },
   "filter.expression.version":{  
      "enumValues":[  
         "1"
      ],
      "regExp":null,
      "path":"filter.expression.version",
      "instance":"String",
      "validators":[  
         {  
            "message":"`{VALUE}` is not a valid enum value for path `{PATH}`.",
            "type":"enum",
            "enumValues":[  
               "1"
            ]
         }
      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "enum":[  
            "1"
         ]
      },
      "_index":null
   },
   "filter.expression.rules":{  
      "path":"filter.expression.rules",
      "instance":"Mixed",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "filter.script._scriptId":{  
      "path":"filter.script._scriptId",
      "instance":"ObjectID",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "ref":"Script"
      },
      "_index":null
   },
   "filter.script.function":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"filter.script.function",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "_id":{  
      "path":"_id",
      "instance":"ObjectID",
      "validators":[  

      ],
      "setters":[  
         null
      ],
      "getters":[  

      ],
      "options":{  
         "auto":true
      },
      "_index":null
   },
   "file.encoding":{  
      "enumValues":[  
         "utf8",
         "win1252",
         "utf-16le"
      ],
      "regExp":null,
      "path":"file.encoding",
      "instance":"String",
      "validators":[  
         {  
            "message":"`{VALUE}` is not a valid enum value for path `{PATH}`.",
            "type":"enum",
            "enumValues":[  
               "utf8",
               "win1252",
               "utf-16le"
            ]
         }
      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "enum":[  
            "utf8",
            "win1252",
            "utf-16le"
         ]
      },
      "_index":null
   },
   "file.type":{  
      "enumValues":[  
         "csv",
         "json",
         "xlsx",
         "xml",
         "filedefinition"
      ],
      "regExp":null,
      "path":"file.type",
      "instance":"String",
      "validators":[  
         {  
            "message":"`{VALUE}` is not a valid enum value for path `{PATH}`.",
            "type":"enum",
            "enumValues":[  
               "csv",
               "json",
               "xlsx",
               "xml",
               "filedefinition"
            ]
         }
      ],
      "setters":[  
         null
      ],
      "getters":[  

      ],
      "options":{  
         "enum":[  
            "csv",
            "json",
            "xlsx",
            "xml",
            "filedefinition"
         ],
         "lowercase":true
      },
      "_index":null
   },
   "file.output":{  
      "enumValues":[  
         "records",
         "metadata",
         "blobKeys"
      ],
      "regExp":null,
      "path":"file.output",
      "instance":"String",
      "validators":[  
         {  
            "message":"`{VALUE}` is not a valid enum value for path `{PATH}`.",
            "type":"enum",
            "enumValues":[  
               "records",
               "metadata",
               "blobKeys"
            ]
         }
      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "enum":[  
            "records",
            "metadata",
            "blobKeys"
         ]
      },
      "_index":null
   },
   "file.skipDelete":{  
      "path":"file.skipDelete",
      "instance":"Boolean",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "file.compressionFormat":{  
      "enumValues":[  
         "gzip"
      ],
      "regExp":null,
      "path":"file.compressionFormat",
      "instance":"String",
      "validators":[  
         {  
            "message":"`{VALUE}` is not a valid enum value for path `{PATH}`.",
            "type":"enum",
            "enumValues":[  
               "gzip"
            ]
         }
      ],
      "setters":[  
         null
      ],
      "getters":[  

      ],
      "options":{  
         "enum":[  
            "gzip"
         ],
         "lowercase":true
      },
      "_index":null
   },
   "file.csv.columnDelimiter":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"file.csv.columnDelimiter",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "file.csv.rowDelimiter":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"file.csv.rowDelimiter",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "file.csv.keyColumns[*]":{  

   },
   "file.csv.hasHeaderRow":{  
      "path":"file.csv.hasHeaderRow",
      "instance":"Boolean",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "file.csv.trimSpaces":{  
      "path":"file.csv.trimSpaces",
      "instance":"Boolean",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "file.csv.rowsToSkip":{  
      "path":"file.csv.rowsToSkip",
      "instance":"Number",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "file.json.resourcePath":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"file.json.resourcePath",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "file.xlsx.hasHeaderRow":{  
      "path":"file.xlsx.hasHeaderRow",
      "instance":"Boolean",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "file.xlsx.keyColumns[*]":{  

   },
   "file.xml.resourcePath":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"file.xml.resourcePath",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "file.fileDefinition.resourcePath":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"file.fileDefinition.resourcePath",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "file.fileDefinition._fileDefinitionId":{  
      "path":"file.fileDefinition._fileDefinitionId",
      "instance":"ObjectID",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "ref":"FileDefinition"
      },
      "_index":null
   },
   "__v":{  
      "path":"__v",
      "instance":"Number",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "rest.relativeURI":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"rest.relativeURI",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "rest.method":{  
      "enumValues":[  
         "GET",
         "POST",
         "PUT"
      ],
      "regExp":null,
      "path":"rest.method",
      "instance":"String",
      "validators":[  
         {  
            "message":"`{VALUE}` is not a valid enum value for path `{PATH}`.",
            "type":"enum",
            "enumValues":[  
               "GET",
               "POST",
               "PUT"
            ]
         }
      ],
      "setters":[  
         null
      ],
      "getters":[  

      ],
      "options":{  
         "enum":[  
            "GET",
            "POST",
            "PUT"
         ],
         "uppercase":true
      },
      "_index":null
   },
   "rest.postBody":{  
      "path":"rest.postBody",
      "instance":"Mixed",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "rest.resourcePath":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"rest.resourcePath",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "rest.headers[*].name":{  

   },
   "rest.headers[*].value":{  

   },
   "rest.allowUndefinedResource":{  
      "path":"rest.allowUndefinedResource",
      "instance":"Boolean",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "rest.pagingMethod":{  
      "enumValues":[  
         "nextpageurl",
         "pageargument",
         "relativeuri",
         "linkheader",
         "skipargument",
         "token",
         "postbody"
      ],
      "regExp":null,
      "path":"rest.pagingMethod",
      "instance":"String",
      "validators":[  
         {  
            "message":"`{VALUE}` is not a valid enum value for path `{PATH}`.",
            "type":"enum",
            "enumValues":[  
               "nextpageurl",
               "pageargument",
               "relativeuri",
               "linkheader",
               "skipargument",
               "token",
               "postbody"
            ]
         }
      ],
      "setters":[  
         null
      ],
      "getters":[  

      ],
      "options":{  
         "enum":[  
            "nextpageurl",
            "pageargument",
            "relativeuri",
            "linkheader",
            "skipargument",
            "token",
            "postbody"
         ],
         "lowercase":true
      },
      "_index":null
   },
   "rest.nextPagePath":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"rest.nextPagePath",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "rest.linkHeaderRelation":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"rest.linkHeaderRelation",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "rest.nextPageRelativeURI":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"rest.nextPageRelativeURI",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "rest.pageArgument":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"rest.pageArgument",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "rest.pagingPostBody":{  
      "path":"rest.pagingPostBody",
      "instance":"Mixed",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "rest.maxPagePath":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"rest.maxPagePath",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "rest.maxCountPath":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"rest.maxCountPath",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "rest.skipArgument":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"rest.skipArgument",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "rest.blobFormat":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"rest.blobFormat",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "rest.successPath":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"rest.successPath",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "rest.successValues[*]":{  

   },
   "rest.lastPageStatusCode":{  
      "path":"rest.lastPageStatusCode",
      "instance":"Number",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "rest.lastPagePath":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"rest.lastPagePath",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "rest.lastPageValue":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"rest.lastPageValue",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "rest.once.relativeURI":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"rest.once.relativeURI",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "rest.once.method":{  
      "enumValues":[  
         "PUT",
         "POST"
      ],
      "regExp":null,
      "path":"rest.once.method",
      "instance":"String",
      "validators":[  
         {  
            "message":"`{VALUE}` is not a valid enum value for path `{PATH}`.",
            "type":"enum",
            "enumValues":[  
               "PUT",
               "POST"
            ]
         }
      ],
      "setters":[  
         null
      ],
      "getters":[  

      ],
      "options":{  
         "enum":[  
            "PUT",
            "POST"
         ],
         "uppercase":true
      },
      "_index":null
   },
   "rest.once.postBody":{  
      "path":"rest.once.postBody",
      "instance":"Mixed",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "adaptorType":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"adaptorType",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  
         null
      ],
      "getters":[  

      ],
      "options":{  
         "default":"RESTExport",
         "select":true
      },
      "_index":null,
      "defaultValue":"RESTExport",
      "selected":true
   },
   "ftp.directoryPath":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"ftp.directoryPath",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "ftp.fileNameStartsWith":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"ftp.fileNameStartsWith",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "ftp.fileNameEndsWith":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"ftp.fileNameEndsWith",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "ftp.backupDirectoryPath":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"ftp.backupDirectoryPath",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "file.purgeInternalBackup":{  
      "path":"file.purgeInternalBackup",
      "instance":"Boolean",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "http.successMediaType":{  
      "enumValues":[  
         "xml",
         "csv",
         "json"
      ],
      "regExp":null,
      "path":"http.successMediaType",
      "instance":"String",
      "validators":[  
         {  
            "message":"`{VALUE}` is not a valid enum value for path `{PATH}`.",
            "type":"enum",
            "enumValues":[  
               "xml",
               "csv",
               "json"
            ]
         }
      ],
      "setters":[  
         null
      ],
      "getters":[  

      ],
      "options":{  
         "enum":[  
            "xml",
            "csv",
            "json"
         ],
         "lowercase":true
      },
      "_index":null
   },
   "http.errorMediaType":{  
      "enumValues":[  
         "xml",
         "json"
      ],
      "regExp":null,
      "path":"http.errorMediaType",
      "instance":"String",
      "validators":[  
         {  
            "message":"`{VALUE}` is not a valid enum value for path `{PATH}`.",
            "type":"enum",
            "enumValues":[  
               "xml",
               "json"
            ]
         }
      ],
      "setters":[  
         null
      ],
      "getters":[  

      ],
      "options":{  
         "enum":[  
            "xml",
            "json"
         ],
         "lowercase":true
      },
      "_index":null
   },
   "http.relativeURI":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"http.relativeURI",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "http.method":{  
      "enumValues":[  
         "GET",
         "PUT",
         "POST",
         "PATCH",
         "DELETE"
      ],
      "regExp":null,
      "path":"http.method",
      "instance":"String",
      "validators":[  
         {  
            "message":"`{VALUE}` is not a valid enum value for path `{PATH}`.",
            "type":"enum",
            "enumValues":[  
               "GET",
               "PUT",
               "POST",
               "PATCH",
               "DELETE"
            ]
         }
      ],
      "setters":[  
         null
      ],
      "getters":[  

      ],
      "options":{  
         "enum":[  
            "GET",
            "PUT",
            "POST",
            "PATCH",
            "DELETE"
         ],
         "uppercase":true
      },
      "_index":null
   },
   "http.body":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"http.body",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "maxSize":10240
      },
      "_index":null
   },
   "http.headers[*].name":{  

   },
   "http.headers[*].value":{  

   },
   "http.paging.method":{  
      "enumValues":[  
         "token",
         "skip",
         "page",
         "url",
         "linkheader",
         "relativeuri"
      ],
      "regExp":null,
      "path":"http.paging.method",
      "instance":"String",
      "validators":[  
         {  
            "message":"`{VALUE}` is not a valid enum value for path `{PATH}`.",
            "type":"enum",
            "enumValues":[  
               "token",
               "skip",
               "page",
               "url",
               "linkheader",
               "relativeuri"
            ]
         }
      ],
      "setters":[  
         null
      ],
      "getters":[  

      ],
      "options":{  
         "enum":[  
            "token",
            "skip",
            "page",
            "url",
            "linkheader",
            "relativeuri"
         ],
         "lowercase":true
      },
      "_index":null
   },
   "http.paging.skip":{  
      "path":"http.paging.skip",
      "instance":"Number",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "http.paging.page":{  
      "path":"http.paging.page",
      "instance":"Number",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "http.paging.token":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"http.paging.token",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "http.paging.path":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"http.paging.path",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "http.paging.relativeURI":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"http.paging.relativeURI",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "http.paging.pathAfterFirstRequest":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"http.paging.pathAfterFirstRequest",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "http.paging.resourcePath":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"http.paging.resourcePath",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "http.paging.maxPagePath":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"http.paging.maxPagePath",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "http.paging.maxCountPath":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"http.paging.maxCountPath",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "http.paging.lastPageStatusCode":{  
      "path":"http.paging.lastPageStatusCode",
      "instance":"Number",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "http.paging.lastPagePath":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"http.paging.lastPagePath",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "http.paging.lastPageValues[*]":{  

   },
   "http.paging.linkHeaderRelation":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"http.paging.linkHeaderRelation",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "http._asyncHelperId":{  
      "path":"http._asyncHelperId",
      "instance":"ObjectID",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "ref":"AsyncHelper"
      },
      "_index":null
   },
   "http.once.relativeURI":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"http.once.relativeURI",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "http.once.method":{  
      "enumValues":[  
         "GET",
         "PUT",
         "POST",
         "PATCH",
         "DELETE"
      ],
      "regExp":null,
      "path":"http.once.method",
      "instance":"String",
      "validators":[  
         {  
            "message":"`{VALUE}` is not a valid enum value for path `{PATH}`.",
            "type":"enum",
            "enumValues":[  
               "GET",
               "PUT",
               "POST",
               "PATCH",
               "DELETE"
            ]
         }
      ],
      "setters":[  
         null
      ],
      "getters":[  

      ],
      "options":{  
         "enum":[  
            "GET",
            "PUT",
            "POST",
            "PATCH",
            "DELETE"
         ],
         "uppercase":true
      },
      "_index":null
   },
   "http.once.body":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"http.once.body",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "maxSize":10240
      },
      "_index":null
   },
   "http.response.resourcePath":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"http.response.resourcePath",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "http.response.resourceIdPath":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"http.response.resourceIdPath",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "http.response.successPath":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"http.response.successPath",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "http.response.successValues[*]":{  

   },
   "http.response.errorPath":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"http.response.errorPath",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "http.response.blobFormat":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"http.response.blobFormat",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "netsuite.type":{  
      "enumValues":[  
         "search",
         "basicSearch",
         "metadata",
         "selectoption",
         "restlet",
         "getList",
         "getServerTime",
         "distributed"
      ],
      "regExp":null,
      "path":"netsuite.type",
      "instance":"String",
      "validators":[  
         {  
            "message":"`{VALUE}` is not a valid enum value for path `{PATH}`.",
            "type":"enum",
            "enumValues":[  
               "search",
               "basicSearch",
               "metadata",
               "selectoption",
               "restlet",
               "getList",
               "getServerTime",
               "distributed"
            ]
         }
      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "enum":[  
            "search",
            "basicSearch",
            "metadata",
            "selectoption",
            "restlet",
            "getList",
            "getServerTime",
            "distributed"
         ]
      },
      "_index":null
   },
   "netsuite.searches[*]":{  
      "type":[  
         null
      ]
   },
   "netsuite.metadata":{  
      "path":"netsuite.metadata",
      "instance":"Mixed",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "netsuite.selectoption":{  
      "path":"netsuite.selectoption",
      "instance":"Mixed",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "netsuite.customFieldMetadata":{  
      "path":"netsuite.customFieldMetadata",
      "instance":"Mixed",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "netsuite.skipGrouping":{  
      "path":"netsuite.skipGrouping",
      "instance":"Boolean",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "netsuite.statsOnly":{  
      "path":"netsuite.statsOnly",
      "instance":"Boolean",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "netsuite.internalId":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"netsuite.internalId",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "netsuite.restlet.recordType":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"netsuite.restlet.recordType",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "netsuite.restlet.searchId":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"netsuite.restlet.searchId",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "netsuite.restlet.criteria[*].field":{  

   },
   "netsuite.restlet.criteria[*].join":{  

   },
   "netsuite.restlet.criteria[*].operator":{  
      "enum":[  
         "after",
         "allof",
         "any",
         "anyof",
         "before",
         "between",
         "contains",
         "doesnotcontain",
         "doesnotstartwith",
         "equalto",
         "greaterthan",
         "greaterthanorequalto",
         "haskeywords",
         "is",
         "isempty",
         "isnot",
         "isnotempty",
         "lessthan",
         "lessthanorequalto",
         "noneof",
         "notafter",
         "notallof",
         "notbefore",
         "notbetween",
         "notequalto",
         "notgreaterthan",
         "notgreater​t​h​a​n​o​r​e​q​u​a​l​t​o",
         "notlessthan",
         "notlessthanorequalto",
         "noton",
         "notonorafter",
         "notonorbefore",
         "notwithin",
         "on",
         "onorafter",
         "onorbefore",
         "startswith",
         "within"
      ]
   },
   "netsuite.restlet.criteria[*].searchValue":{  
      "instance":"Mixed",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "_index":null
   },
   "netsuite.restlet.criteria[*].searchValue2":{  
      "instance":"Mixed",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "_index":null
   },
   "netsuite.restlet.batchSize":{  
      "path":"netsuite.restlet.batchSize",
      "instance":"Number",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "template":false
      },
      "_index":null
   },
   "netsuite.restlet.hooks.batchSize":{  
      "path":"netsuite.restlet.hooks.batchSize",
      "instance":"Number",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "template":false
      },
      "_index":null
   },
   "netsuite.restlet.hooks.preSend.fileInternalId":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"netsuite.restlet.hooks.preSend.fileInternalId",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "template":false
      },
      "_index":null
   },
   "netsuite.restlet.hooks.preSend.function":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"netsuite.restlet.hooks.preSend.function",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "template":false
      },
      "_index":null
   },
   "netsuite.restlet.hooks.preSend.configuration":{  
      "path":"netsuite.restlet.hooks.preSend.configuration",
      "instance":"Mixed",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "netsuite.distributed.recordType":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"netsuite.distributed.recordType",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "netsuite.distributed.executionContext[*]":{  
      "cLocked":false,
      "enum":[  
         "userinterface",
         "webservices",
         "csvimport",
         "offlineclient",
         "portlet",
         "scheduled",
         "suitelet",
         "custommassupdate",
         "workflow",
         "webstore",
         "userevent",
         "mapreduce",
         "restlet"
      ],
      "lowercase":true
   },
   "netsuite.distributed.disabled":{  
      "path":"netsuite.distributed.disabled",
      "instance":"Boolean",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "cLocked":false,
         "patch":true
      },
      "_index":null
   },
   "netsuite.distributed.executionType[*]":{  
      "enum":[  
         "create",
         "edit",
         "delete",
         "xedit",
         "copy",
         "view",
         "cancel",
         "approve",
         "reject",
         "pack",
         "ship",
         "markcomplete",
         "reassign",
         "editforecast",
         "dropship",
         "specialorder",
         "orderitems",
         "paybills",
         "print",
         "email"
      ],
      "lowercase":true,
      "cLocked":false
   },
   "netsuite.distributed.qualifier":{  
      "path":"netsuite.distributed.qualifier",
      "instance":"Mixed",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "cLocked":false
      },
      "_index":null
   },
   "netsuite.distributed.hooks.preSend.fileInternalId":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"netsuite.distributed.hooks.preSend.fileInternalId",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "netsuite.distributed.hooks.preSend.function":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"netsuite.distributed.hooks.preSend.function",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "netsuite.distributed.hooks.preSend.configuration":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"netsuite.distributed.hooks.preSend.configuration",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "netsuite.distributed.sublists":{  
      "path":"netsuite.distributed.sublists",
      "instance":"Mixed",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "cLocked":false
      },
      "_index":null
   },
   "netsuite.distributed.forceReload":{  
      "path":"netsuite.distributed.forceReload",
      "instance":"Boolean",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "cLocked":false
      },
      "_index":null
   },
   "netsuite.distributed.ioEnvironment":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"netsuite.distributed.ioEnvironment",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "netsuite.distributed.lastSyncedDate":{  
      "path":"netsuite.distributed.lastSyncedDate",
      "instance":"Date",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "netsuite.distributed.settings":{  
      "path":"netsuite.distributed.settings",
      "instance":"Mixed",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "netsuite.getList[*].type":{  

   },
   "netsuite.getList[*].typeId":{  

   },
   "netsuite.getList[*].internalId":{  

   },
   "netsuite.getList[*].externalId":{  

   },
   "netsuite.searchPreferences.bodyFieldsOnly":{  
      "path":"netsuite.searchPreferences.bodyFieldsOnly",
      "instance":"Boolean",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "netsuite.searchPreferences.pageSize":{  
      "path":"netsuite.searchPreferences.pageSize",
      "instance":"Number",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "netsuite.searchPreferences.returnSearchColumns":{  
      "path":"netsuite.searchPreferences.returnSearchColumns",
      "instance":"Boolean",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "rdbms.query":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"rdbms.query",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "maxSize":32768
      },
      "_index":null
   },
   "rdbms.once.query":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"rdbms.once.query",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "maxSize":32768
      },
      "_index":null
   },
   "s3.region":{  
      "enumValues":[  
         "us-east-1",
         "us-east-2",
         "us-west-1",
         "us-west-2",
         "ca-central-1",
         "ap-south-1",
         "ap-northeast-2",
         "ap-southeast-1",
         "ap-southeast-2",
         "ap-northeast-1",
         "eu-central-1",
         "eu-west-1",
         "eu-west-2",
         "sa-east-1",
         "cn-north-1"
      ],
      "regExp":null,
      "path":"s3.region",
      "instance":"String",
      "validators":[  
         {  
            "message":"`{VALUE}` is not a valid enum value for path `{PATH}`.",
            "type":"enum",
            "enumValues":[  
               "us-east-1",
               "us-east-2",
               "us-west-1",
               "us-west-2",
               "ca-central-1",
               "ap-south-1",
               "ap-northeast-2",
               "ap-southeast-1",
               "ap-southeast-2",
               "ap-northeast-1",
               "eu-central-1",
               "eu-west-1",
               "eu-west-2",
               "sa-east-1",
               "cn-north-1"
            ]
         }
      ],
      "setters":[  
         null
      ],
      "getters":[  

      ],
      "options":{  
         "enum":[  
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "ca-central-1",
            "ap-south-1",
            "ap-northeast-2",
            "ap-southeast-1",
            "ap-southeast-2",
            "ap-northeast-1",
            "eu-central-1",
            "eu-west-1",
            "eu-west-2",
            "sa-east-1",
            "cn-north-1"
         ],
         "lowercase":true
      },
      "_index":null
   },
   "s3.bucket":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"s3.bucket",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "s3.keyStartsWith":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"s3.keyStartsWith",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "s3.keyEndsWith":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"s3.keyEndsWith",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "s3.backupBucket":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"s3.backupBucket",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "salesforce.type":{  
      "enumValues":[  
         "soql"
      ],
      "regExp":null,
      "path":"salesforce.type",
      "instance":"String",
      "validators":[  
         {  
            "message":"`{VALUE}` is not a valid enum value for path `{PATH}`.",
            "type":"enum",
            "enumValues":[  
               "soql"
            ]
         }
      ],
      "setters":[  
         null
      ],
      "getters":[  

      ],
      "options":{  
         "enum":[  
            "soql"
         ],
         "lowercase":true
      },
      "_index":null
   },
   "salesforce.sObjectType":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"salesforce.sObjectType",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "cLocked":false
      },
      "_index":null
   },
   "salesforce.id":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"salesforce.id",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "salesforce.api":{  
      "enumValues":[  
         "rest",
         "soap"
      ],
      "regExp":null,
      "path":"salesforce.api",
      "instance":"String",
      "validators":[  
         {  
            "message":"`{VALUE}` is not a valid enum value for path `{PATH}`.",
            "type":"enum",
            "enumValues":[  
               "rest",
               "soap"
            ]
         }
      ],
      "setters":[  
         null
      ],
      "getters":[  

      ],
      "options":{  
         "enum":[  
            "rest",
            "soap"
         ],
         "lowercase":true
      },
      "_index":null
   },
   "salesforce.soql.query":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"salesforce.soql.query",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "maxSize":20480
      },
      "_index":null
   },
   "salesforce.distributed.referencedFields[*]":{  
      "type":[  
         null
      ],
      "cLocked":false
   },
   "salesforce.distributed.disabled":{  
      "path":"salesforce.distributed.disabled",
      "instance":"Boolean",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "cLocked":false,
         "patch":true
      },
      "_index":null
   },
   "salesforce.distributed.connectorId":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"salesforce.distributed.connectorId",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "cLocked":false
      },
      "_index":null
   },
   "salesforce.distributed.userDefinedReferencedFields[*]":{  
      "type":[  
         null
      ]
   },
   "salesforce.distributed.qualifier":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"salesforce.distributed.qualifier",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "cLocked":false
      },
      "_index":null
   },
   "salesforce.distributed.relatedLists[*].referencedFields[*]":{  
      "type":[  
         null
      ],
      "cLocked":false
   },
   "salesforce.distributed.relatedLists[*].parentField":{  
      "cLocked":false
   },
   "salesforce.distributed.relatedLists[*].sObjectType":{  
      "cLocked":false
   },
   "salesforce.distributed.relatedLists[*].filter":{  
      "cLocked":false
   },
   "salesforce.distributed.relatedLists[*].orderBy":{  
      "cLocked":false
   },
   "salesforce.distributed.relatedLists[*].userDefined":{  
      "cLocked":false
   },
   "wrapper.function":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"wrapper.function",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "wrapper.configuration":{  
      "path":"wrapper.configuration",
      "instance":"Mixed",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "mongodb.method":{  
      "enumValues":[  
         "find"
      ],
      "regExp":null,
      "path":"mongodb.method",
      "instance":"String",
      "validators":[  
         {  
            "message":"`{VALUE}` is not a valid enum value for path `{PATH}`.",
            "type":"enum",
            "enumValues":[  
               "find"
            ]
         }
      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "enum":[  
            "find"
         ]
      },
      "_index":null
   },
   "mongodb.collection":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"mongodb.collection",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   },
   "mongodb.filter":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"mongodb.filter",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "maxSize":32768
      },
      "_index":null
   },
   "mongodb.projection":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"mongodb.projection",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  
         "maxSize":32768
      },
      "_index":null
   },
   "as2.fileKey":{  
      "enumValues":[  

      ],
      "regExp":null,
      "path":"as2.fileKey",
      "instance":"String",
      "validators":[  

      ],
      "setters":[  

      ],
      "getters":[  

      ],
      "options":{  

      },
      "_index":null
   }
}