export default {
  fields: [
    { formId: 'common' },
    {
      id: 'importData',
      type: 'labeltitle',
      label: 'What would you like the data imported?',
    },
    { fieldId: 'http.parentOption' },
    { fieldId: 'http.childRecords' },
    { fieldId: 'http.method' },
    { fieldId: 'http.headers' },
    { fieldId: 'http.requestMediaType' },
    { fieldId: 'http.compositeType' },
    { fieldId: 'http.relativeUri' },
    { fieldId: 'http.successPath' },
    { fieldId: 'http.successValues' },
    { fieldId: 'http.responseIdPath' },
    { fieldId: 'http.responsePath' },
    { fieldId: 'http.errorPath' },
    { fieldId: 'http.batchSizeLimit' },
    { fieldId: 'http.createNewData' },
    { fieldId: 'http.compositeMethodCreate' },
    { fieldId: 'http.relativeUriCreate' },
    { fieldId: 'http.responseIdPathCreate' },
    { fieldId: 'http.responsePathCreate' },
    { fieldId: 'http.upateExistingData' },
    { fieldId: 'http.compositeMethodUpdate' },
    { fieldId: 'http.relativeUriUpdate' },
    { fieldId: 'http.responseIdPathUpdate' },
    { fieldId: 'http.responsePathUpdate' },
    { fieldId: 'http.ignoreExistingData' },
    { fieldId: 'http.existingDataId' },
    {
      id: 'mediatypeInformation',
      type: 'labeltitle',
      label: 'Media type information',
    },
    { fieldId: 'http.successMediaType' },
    { fieldId: 'http.errorMediaType' },
    { fieldId: 'http.sampleFile' },
    { fieldId: 'http.columnDelimiter' },
    { fieldId: 'http.includeHeader' },
    { fieldId: 'http.customHeaderRows' },
    {
      id: 'dataMapped',
      type: 'labeltitle',
      label: 'How should the data be mapped?',
    },
    { fieldId: 'http.parentOptionMapping' },
    { fieldId: 'http.childRecordsMapping' },
  ],
  fieldSets: [
    {
      header: 'Advanced',
      collapsed: true,
      fields: [
        { fieldId: 'http.rowDelimiter' },
        { fieldId: 'http.replaceTabWithSpace' },
        { fieldId: 'http.replaceNewLineWithSpace' },
        { fieldId: 'http.ignoreEmptyNodes' },
        { fieldId: 'http.concurrencyIdLockTemplate' },
        { fieldId: 'http.dataUriTemplate' },
        { fieldId: 'http.configureAsyncHelper' },
      ],
    },
    {
      header: 'Hooks (Optional, Developers Only)',
      collapsed: false,
      fields: [{ formId: 'hooks' }],
    },
  ],
};
