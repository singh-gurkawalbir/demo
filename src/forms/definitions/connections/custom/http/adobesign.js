export default {
  preSave: formValues => ({
    ...formValues,
    '/type': 'http',
    '/assistant': 'adobesign',
    '/http/auth/type': 'oauth',
    '/http/mediaType': 'json',
    '/http/baseURI': `https://api.${formValues['/http/unencrypted/subdomain']}.echosign.com/api/rest/v6`,
    '/http/ping/relativeURI': '/users',
    '/http/ping/method': 'GET',
    '/http/auth/oauth/authURI': `https://secure.${formValues['/http/unencrypted/subdomain']}.echosign.com/public/oauth`,
    '/http/auth/oauth/tokenURI': `https://secure.${formValues['/http/unencrypted/subdomain']}.echosign.com/oauth/token`,
    '/http/auth/oauth/grantType': 'authorizecode',
    '/http/auth/token/location': 'header',
    '/http/auth/token/scheme': 'Bearer',
    '/http/auth/token/headerName': 'Authorization',
    '/http/auth/oauth/scopeDelimiter': '+',
    '/http/auth/token/refreshMethod': 'POST',
    '/http/auth/token/refreshMediaType': 'urlencoded',
    '/http/headers': [{ name: 'x-api-user', value: '{{{join ":" "email" connection.http.unencrypted.email}}}' }],
  }),
  fieldMap: {
    name: { fieldId: 'name' },
    'http.unencrypted.subdomain': {
      fieldId: 'http.unencrypted.subdomain',
      startAdornment: 'https://api.',
      endAdornment: '.adobesign.com/api/rest/v6',
      type: 'text',
      label: 'Subdomain',
      helpKey: 'adobesign.connection.http.unencrypted.subdomain',
      required: true,
      validWhen: {
        matchesRegEx: {
          pattern: '^[\\S]+$',
          message: 'Subdomain should not contain spaces.',
        },
      },
    },
    'http.unencrypted.email': {
      fieldId: 'http.unencrypted.email',
      type: 'text',
      label: 'Email Id',
      required: true,
      helpKey: 'adobesign.connection.http.unencrypted.email',
    },
    'http._iClientId': {
      fieldId: 'http._iClientId',
      required: true,
      filter: { provider: 'custom_oauth2' },
      type: 'dynaiclient',
      connectionId: r => r && r._id,
      connectorId: r => r && r._connectorId,
      ignoreEnvironmentFilter: true,
    },
    'http.auth.oauth.scope': {
      fieldId: 'http.auth.oauth.scope',
      scopes: [
        {
          subHeader: 'Account',
          scopes: [
            'user_read:account',
            'user_write:account',
            'user_login:account',
            'agreement_read:account',
            'agreement_write:account',
            'agreement_send:account',
            'widget_read:account',
            'widget_write:account',
            'library_read:account',
            'library_write:account',
            'workflow_read:account',
            'workflow_write:account',
            'webhook_read:account',
            'webhook_write:account',
            'webhook_retention:account',
          ],
        },
        {
          subHeader: 'Group',
          scopes: [
            'user_read:group',
            'user_write:group',
            'user_login:group',
            'agreement_read:group',
            'agreement_write:group',
            'agreement_send:group',
            'widget_read:group',
            'widget_write:group',
            'library_read:group',
            'library_write:group',
            'workflow_read:group',
            'workflow_write:group',
            'webhook_read:group',
            'webhook_write:group',
            'webhook_retention:group',
          ],
        },
        {
          subHeader: 'Self',
          scopes: [
            'user_read:self',
            'user_write:self',
            'user_login:self',
            'agreement_read:self',
            'agreement_write:self',
            'agreement_send:self',
            'widget_read:self',
            'widget_write:self',
            'library_read:self',
            'library_write:self',
            'workflow_read:self',
            'workflow_write:self',
            'webhook_read:self',
            'webhook_write:self',
            'webhook_retention:self',
          ],
        },
      ],
    },
    httpAdvanced: { formId: 'httpAdvanced' },
    application: {
      fieldId: 'application',
    },
  },
  layout: {
    type: 'collapse',
    containers: [
      { collapsed: true, label: 'General', fields: ['name', 'application'] },
      { collapsed: true,
        label: 'Application details',
        fields: ['http.unencrypted.subdomain',
          'http.unencrypted.email',
          'http._iClientId',
          'http.auth.oauth.scope'],
      },
      {
        collapsed: true,
        label: 'Advanced',
        fields: ['httpAdvanced'],
      },
    ],
  },
};
