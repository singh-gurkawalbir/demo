export default {
  preSave: formValues => ({
    ...formValues,
    '/type': 'http',
    '/assistant': 'sapsuccessfactors',
    '/http/auth/type': 'token',
    '/http/mediaType': 'json',
    '/http/baseURI': `https://${formValues['/http/unencrypted/baseurl']}/odata/v2`,
    '/http/ping/relativeURI': '/Background_Community',
    '/http/ping/method': 'GET',
    '/http/auth/token/location': 'header',
    '/http/auth/token/scheme': 'Bearer',
    '/http/auth/token/headerName': 'Authorization',
    '/http/auth/token/refreshMethod': 'POST',
    '/http/auth/token/refreshMediaType': 'urlencoded',
    '/http/auth/token/refreshRelativeURI': `https://${formValues['/http/unencrypted/baseurl']}/oauth/token`,
    '/http/auth/token/refreshBody': '{ "client_id": "{{{connection.http.unencrypted.clientId}}}", "assertion": "{{{connection.http.encrypted.assertion}}}", "company_id":"{{{connection.http.unencrypted.companyId}}}","grant_type": "urn:ietf:params:oauth:grant-type:saml2-bearer", "user_id":"{{{connection.http.unencrypted.userId}}}" }',
    '/http/auth/failStatusCode': 403,
    '/http/headers': [
      {
        name: 'Accept',
        value: 'application/json',
      },
    ],
  }),
  fieldMap: {
    name: { fieldId: 'name' },
    'http.unencrypted.baseurl': {
      id: 'http.unencrypted.baseurl',
      type: 'text',
      label: 'Base URL',
      startAdornment: 'https://',
      required: true,
      validWhen: {
        matchesRegEx: {
          pattern: '^[\\S]+$',
          message: 'Subdomain should not contain spaces.',
        },
      },
      helpKey: 'sapsuccessfactors.connection.http.unencrypted.baseurl',
    },
    'http.unencrypted.clientId': {
      id: 'http.unencrypted.clientId',
      type: 'text',
      label: 'Client ID',
      required: true,
      helpKey: 'sapsuccessfactors.connection.http.unencrypted.clientId',
    },
    'http.unencrypted.companyId': {
      id: 'http.unencrypted.companyId',
      type: 'text',
      label: 'Company ID',
      required: true,
      helpKey: 'sapsuccessfactors.connection.http.unencrypted.companyId',
    },
    'http.unencrypted.userId': {
      id: 'http.unencrypted.userId',
      type: 'text',
      label: 'User ID',
      required: true,
      helpKey: 'sapsuccessfactors.connection.http.unencrypted.userId',
    },
    'http.encrypted.assertion': {
      id: 'http.encrypted.assertion',
      type: 'text',
      inputType: 'password',
      description:
        'Note: for security reasons this field must always be re-entered.',
      defaultValue: '',
      label: 'SAML Assertion',
      required: true,
      helpKey: 'sapsuccessfactors.connection.http.encrypted.assertion',
    },
    'http.auth.token.token': {
      fieldId: 'http.auth.token.token',
      type: 'tokengen',
      inputType: 'password',
      resourceId: r => r._id,
      disabledWhen: [
        { field: 'http.unencrypted.clientId', is: [''] },
        { field: 'http.encrypted.assertion', is: [''] },
        { field: 'http.unencrypted.userId', is: [''] },
        { field: 'http.unencrypted.companyId', is: [''] },
      ],
      label: 'Generate token',
      inputboxLabel: 'Token',
      defaultValue: '',
      required: true,
      helpKey: 'sapsuccessfactors.connection.http.auth.token.token',
    },
    httpAdvanced: { formId: 'httpAdvanced' },
    application: {
      fieldId: 'application',
    },
  },
  layout: {
    type: 'collapse',
    containers: [
      { collapsed: true, label: 'General', fields: ['name', 'application'] },
      { collapsed: true,
        label: 'Application details',
        fields: [
          'http.unencrypted.baseurl',
          'http.unencrypted.clientId',
          'http.unencrypted.userId',
          'http.unencrypted.companyId',
          'http.encrypted.assertion',
          'http.auth.token.token',
        ],
      },
      {
        collapsed: true,
        label: 'Advanced',
        fields: ['httpAdvanced'],
      },
    ],
  },
};
